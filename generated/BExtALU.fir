circuit BExtALU :
  module ShiftLeft :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : UInt<32>, flip bits : UInt<5>, A_out : UInt<32>}

    node A_temp = dshl(io.A_in, io.bits) @[RISCVALU.scala 17:28]
    io.A_out <= A_temp @[RISCVALU.scala 19:15]

  module ShiftRight :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : UInt<32>, flip bits : UInt<5>, A_out : UInt<32>}

    node A_temp = dshr(io.A_in, io.bits) @[RISCVALU.scala 30:28]
    io.A_out <= A_temp @[RISCVALU.scala 32:15]

  module Adder :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : UInt<32>, flip B_in : UInt<32>, sum : UInt<32>}

    node _sum_temp_T = add(io.A_in, io.B_in) @[RISCVALU.scala 43:30]
    node sum_temp = tail(_sum_temp_T, 1) @[RISCVALU.scala 43:30]
    io.sum <= sum_temp @[RISCVALU.scala 45:13]

  module InvertBits :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : UInt<32>, A_out : UInt<32>}

    node A_temp = not(io.A_in) @[RISCVALU.scala 55:20]
    io.A_out <= A_temp @[RISCVALU.scala 57:15]

  module ANDBits :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : UInt<32>, flip B_in : UInt<32>, and : UInt<32>}

    node and_temp = and(io.A_in, io.B_in) @[RISCVALU.scala 68:30]
    io.and <= and_temp @[RISCVALU.scala 70:13]

  module ORBits :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : UInt<32>, flip B_in : UInt<32>, or : UInt<32>}

    node or_temp = or(io.A_in, io.B_in) @[RISCVALU.scala 81:29]
    io.or <= or_temp @[RISCVALU.scala 83:12]

  module XORBits :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : UInt<32>, flip B_in : UInt<32>, xor : UInt<32>}

    node xor_temp = xor(io.A_in, io.B_in) @[RISCVALU.scala 94:30]
    io.xor <= xor_temp @[RISCVALU.scala 96:13]

  module CountLeadingZeros :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : UInt<32>, A_out : UInt<6>}

    node _reversed_T = shl(UInt<16>("hffff"), 16) @[Bitwise.scala 107:52]
    node _reversed_T_1 = xor(UInt<32>("hffffffff"), _reversed_T) @[Bitwise.scala 107:21]
    node _reversed_T_2 = shr(io.A_in, 16) @[Bitwise.scala 108:21]
    node _reversed_T_3 = and(_reversed_T_2, _reversed_T_1) @[Bitwise.scala 108:31]
    node _reversed_T_4 = bits(io.A_in, 15, 0) @[Bitwise.scala 108:46]
    node _reversed_T_5 = shl(_reversed_T_4, 16) @[Bitwise.scala 108:70]
    node _reversed_T_6 = not(_reversed_T_1) @[Bitwise.scala 108:82]
    node _reversed_T_7 = and(_reversed_T_5, _reversed_T_6) @[Bitwise.scala 108:80]
    node _reversed_T_8 = or(_reversed_T_3, _reversed_T_7) @[Bitwise.scala 108:39]
    node _reversed_T_9 = bits(_reversed_T_1, 23, 0) @[Bitwise.scala 107:28]
    node _reversed_T_10 = shl(_reversed_T_9, 8) @[Bitwise.scala 107:52]
    node _reversed_T_11 = xor(_reversed_T_1, _reversed_T_10) @[Bitwise.scala 107:21]
    node _reversed_T_12 = shr(_reversed_T_8, 8) @[Bitwise.scala 108:21]
    node _reversed_T_13 = and(_reversed_T_12, _reversed_T_11) @[Bitwise.scala 108:31]
    node _reversed_T_14 = bits(_reversed_T_8, 23, 0) @[Bitwise.scala 108:46]
    node _reversed_T_15 = shl(_reversed_T_14, 8) @[Bitwise.scala 108:70]
    node _reversed_T_16 = not(_reversed_T_11) @[Bitwise.scala 108:82]
    node _reversed_T_17 = and(_reversed_T_15, _reversed_T_16) @[Bitwise.scala 108:80]
    node _reversed_T_18 = or(_reversed_T_13, _reversed_T_17) @[Bitwise.scala 108:39]
    node _reversed_T_19 = bits(_reversed_T_11, 27, 0) @[Bitwise.scala 107:28]
    node _reversed_T_20 = shl(_reversed_T_19, 4) @[Bitwise.scala 107:52]
    node _reversed_T_21 = xor(_reversed_T_11, _reversed_T_20) @[Bitwise.scala 107:21]
    node _reversed_T_22 = shr(_reversed_T_18, 4) @[Bitwise.scala 108:21]
    node _reversed_T_23 = and(_reversed_T_22, _reversed_T_21) @[Bitwise.scala 108:31]
    node _reversed_T_24 = bits(_reversed_T_18, 27, 0) @[Bitwise.scala 108:46]
    node _reversed_T_25 = shl(_reversed_T_24, 4) @[Bitwise.scala 108:70]
    node _reversed_T_26 = not(_reversed_T_21) @[Bitwise.scala 108:82]
    node _reversed_T_27 = and(_reversed_T_25, _reversed_T_26) @[Bitwise.scala 108:80]
    node _reversed_T_28 = or(_reversed_T_23, _reversed_T_27) @[Bitwise.scala 108:39]
    node _reversed_T_29 = bits(_reversed_T_21, 29, 0) @[Bitwise.scala 107:28]
    node _reversed_T_30 = shl(_reversed_T_29, 2) @[Bitwise.scala 107:52]
    node _reversed_T_31 = xor(_reversed_T_21, _reversed_T_30) @[Bitwise.scala 107:21]
    node _reversed_T_32 = shr(_reversed_T_28, 2) @[Bitwise.scala 108:21]
    node _reversed_T_33 = and(_reversed_T_32, _reversed_T_31) @[Bitwise.scala 108:31]
    node _reversed_T_34 = bits(_reversed_T_28, 29, 0) @[Bitwise.scala 108:46]
    node _reversed_T_35 = shl(_reversed_T_34, 2) @[Bitwise.scala 108:70]
    node _reversed_T_36 = not(_reversed_T_31) @[Bitwise.scala 108:82]
    node _reversed_T_37 = and(_reversed_T_35, _reversed_T_36) @[Bitwise.scala 108:80]
    node _reversed_T_38 = or(_reversed_T_33, _reversed_T_37) @[Bitwise.scala 108:39]
    node _reversed_T_39 = bits(_reversed_T_31, 30, 0) @[Bitwise.scala 107:28]
    node _reversed_T_40 = shl(_reversed_T_39, 1) @[Bitwise.scala 107:52]
    node _reversed_T_41 = xor(_reversed_T_31, _reversed_T_40) @[Bitwise.scala 107:21]
    node _reversed_T_42 = shr(_reversed_T_38, 1) @[Bitwise.scala 108:21]
    node _reversed_T_43 = and(_reversed_T_42, _reversed_T_41) @[Bitwise.scala 108:31]
    node _reversed_T_44 = bits(_reversed_T_38, 30, 0) @[Bitwise.scala 108:46]
    node _reversed_T_45 = shl(_reversed_T_44, 1) @[Bitwise.scala 108:70]
    node _reversed_T_46 = not(_reversed_T_41) @[Bitwise.scala 108:82]
    node _reversed_T_47 = and(_reversed_T_45, _reversed_T_46) @[Bitwise.scala 108:80]
    node reversed = or(_reversed_T_43, _reversed_T_47) @[Bitwise.scala 108:39]
    node _leadingZeros_T = bits(reversed, 0, 0) @[OneHot.scala 47:45]
    node _leadingZeros_T_1 = bits(reversed, 1, 1) @[OneHot.scala 47:45]
    node _leadingZeros_T_2 = bits(reversed, 2, 2) @[OneHot.scala 47:45]
    node _leadingZeros_T_3 = bits(reversed, 3, 3) @[OneHot.scala 47:45]
    node _leadingZeros_T_4 = bits(reversed, 4, 4) @[OneHot.scala 47:45]
    node _leadingZeros_T_5 = bits(reversed, 5, 5) @[OneHot.scala 47:45]
    node _leadingZeros_T_6 = bits(reversed, 6, 6) @[OneHot.scala 47:45]
    node _leadingZeros_T_7 = bits(reversed, 7, 7) @[OneHot.scala 47:45]
    node _leadingZeros_T_8 = bits(reversed, 8, 8) @[OneHot.scala 47:45]
    node _leadingZeros_T_9 = bits(reversed, 9, 9) @[OneHot.scala 47:45]
    node _leadingZeros_T_10 = bits(reversed, 10, 10) @[OneHot.scala 47:45]
    node _leadingZeros_T_11 = bits(reversed, 11, 11) @[OneHot.scala 47:45]
    node _leadingZeros_T_12 = bits(reversed, 12, 12) @[OneHot.scala 47:45]
    node _leadingZeros_T_13 = bits(reversed, 13, 13) @[OneHot.scala 47:45]
    node _leadingZeros_T_14 = bits(reversed, 14, 14) @[OneHot.scala 47:45]
    node _leadingZeros_T_15 = bits(reversed, 15, 15) @[OneHot.scala 47:45]
    node _leadingZeros_T_16 = bits(reversed, 16, 16) @[OneHot.scala 47:45]
    node _leadingZeros_T_17 = bits(reversed, 17, 17) @[OneHot.scala 47:45]
    node _leadingZeros_T_18 = bits(reversed, 18, 18) @[OneHot.scala 47:45]
    node _leadingZeros_T_19 = bits(reversed, 19, 19) @[OneHot.scala 47:45]
    node _leadingZeros_T_20 = bits(reversed, 20, 20) @[OneHot.scala 47:45]
    node _leadingZeros_T_21 = bits(reversed, 21, 21) @[OneHot.scala 47:45]
    node _leadingZeros_T_22 = bits(reversed, 22, 22) @[OneHot.scala 47:45]
    node _leadingZeros_T_23 = bits(reversed, 23, 23) @[OneHot.scala 47:45]
    node _leadingZeros_T_24 = bits(reversed, 24, 24) @[OneHot.scala 47:45]
    node _leadingZeros_T_25 = bits(reversed, 25, 25) @[OneHot.scala 47:45]
    node _leadingZeros_T_26 = bits(reversed, 26, 26) @[OneHot.scala 47:45]
    node _leadingZeros_T_27 = bits(reversed, 27, 27) @[OneHot.scala 47:45]
    node _leadingZeros_T_28 = bits(reversed, 28, 28) @[OneHot.scala 47:45]
    node _leadingZeros_T_29 = bits(reversed, 29, 29) @[OneHot.scala 47:45]
    node _leadingZeros_T_30 = bits(reversed, 30, 30) @[OneHot.scala 47:45]
    node _leadingZeros_T_31 = bits(reversed, 31, 31) @[OneHot.scala 47:45]
    node _leadingZeros_T_32 = mux(_leadingZeros_T_30, UInt<5>("h1e"), UInt<5>("h1f")) @[Mux.scala 47:70]
    node _leadingZeros_T_33 = mux(_leadingZeros_T_29, UInt<5>("h1d"), _leadingZeros_T_32) @[Mux.scala 47:70]
    node _leadingZeros_T_34 = mux(_leadingZeros_T_28, UInt<5>("h1c"), _leadingZeros_T_33) @[Mux.scala 47:70]
    node _leadingZeros_T_35 = mux(_leadingZeros_T_27, UInt<5>("h1b"), _leadingZeros_T_34) @[Mux.scala 47:70]
    node _leadingZeros_T_36 = mux(_leadingZeros_T_26, UInt<5>("h1a"), _leadingZeros_T_35) @[Mux.scala 47:70]
    node _leadingZeros_T_37 = mux(_leadingZeros_T_25, UInt<5>("h19"), _leadingZeros_T_36) @[Mux.scala 47:70]
    node _leadingZeros_T_38 = mux(_leadingZeros_T_24, UInt<5>("h18"), _leadingZeros_T_37) @[Mux.scala 47:70]
    node _leadingZeros_T_39 = mux(_leadingZeros_T_23, UInt<5>("h17"), _leadingZeros_T_38) @[Mux.scala 47:70]
    node _leadingZeros_T_40 = mux(_leadingZeros_T_22, UInt<5>("h16"), _leadingZeros_T_39) @[Mux.scala 47:70]
    node _leadingZeros_T_41 = mux(_leadingZeros_T_21, UInt<5>("h15"), _leadingZeros_T_40) @[Mux.scala 47:70]
    node _leadingZeros_T_42 = mux(_leadingZeros_T_20, UInt<5>("h14"), _leadingZeros_T_41) @[Mux.scala 47:70]
    node _leadingZeros_T_43 = mux(_leadingZeros_T_19, UInt<5>("h13"), _leadingZeros_T_42) @[Mux.scala 47:70]
    node _leadingZeros_T_44 = mux(_leadingZeros_T_18, UInt<5>("h12"), _leadingZeros_T_43) @[Mux.scala 47:70]
    node _leadingZeros_T_45 = mux(_leadingZeros_T_17, UInt<5>("h11"), _leadingZeros_T_44) @[Mux.scala 47:70]
    node _leadingZeros_T_46 = mux(_leadingZeros_T_16, UInt<5>("h10"), _leadingZeros_T_45) @[Mux.scala 47:70]
    node _leadingZeros_T_47 = mux(_leadingZeros_T_15, UInt<4>("hf"), _leadingZeros_T_46) @[Mux.scala 47:70]
    node _leadingZeros_T_48 = mux(_leadingZeros_T_14, UInt<4>("he"), _leadingZeros_T_47) @[Mux.scala 47:70]
    node _leadingZeros_T_49 = mux(_leadingZeros_T_13, UInt<4>("hd"), _leadingZeros_T_48) @[Mux.scala 47:70]
    node _leadingZeros_T_50 = mux(_leadingZeros_T_12, UInt<4>("hc"), _leadingZeros_T_49) @[Mux.scala 47:70]
    node _leadingZeros_T_51 = mux(_leadingZeros_T_11, UInt<4>("hb"), _leadingZeros_T_50) @[Mux.scala 47:70]
    node _leadingZeros_T_52 = mux(_leadingZeros_T_10, UInt<4>("ha"), _leadingZeros_T_51) @[Mux.scala 47:70]
    node _leadingZeros_T_53 = mux(_leadingZeros_T_9, UInt<4>("h9"), _leadingZeros_T_52) @[Mux.scala 47:70]
    node _leadingZeros_T_54 = mux(_leadingZeros_T_8, UInt<4>("h8"), _leadingZeros_T_53) @[Mux.scala 47:70]
    node _leadingZeros_T_55 = mux(_leadingZeros_T_7, UInt<3>("h7"), _leadingZeros_T_54) @[Mux.scala 47:70]
    node _leadingZeros_T_56 = mux(_leadingZeros_T_6, UInt<3>("h6"), _leadingZeros_T_55) @[Mux.scala 47:70]
    node _leadingZeros_T_57 = mux(_leadingZeros_T_5, UInt<3>("h5"), _leadingZeros_T_56) @[Mux.scala 47:70]
    node _leadingZeros_T_58 = mux(_leadingZeros_T_4, UInt<3>("h4"), _leadingZeros_T_57) @[Mux.scala 47:70]
    node _leadingZeros_T_59 = mux(_leadingZeros_T_3, UInt<2>("h3"), _leadingZeros_T_58) @[Mux.scala 47:70]
    node _leadingZeros_T_60 = mux(_leadingZeros_T_2, UInt<2>("h2"), _leadingZeros_T_59) @[Mux.scala 47:70]
    node _leadingZeros_T_61 = mux(_leadingZeros_T_1, UInt<1>("h1"), _leadingZeros_T_60) @[Mux.scala 47:70]
    node leadingZeros = mux(_leadingZeros_T, UInt<1>("h0"), _leadingZeros_T_61) @[Mux.scala 47:70]
    node _io_A_out_T = eq(io.A_in, UInt<1>("h0")) @[RISCVALU.scala 111:27]
    node _io_A_out_T_1 = mux(_io_A_out_T, UInt<6>("h20"), leadingZeros) @[RISCVALU.scala 111:18]
    io.A_out <= _io_A_out_T_1 @[RISCVALU.scala 111:12]

  module CountTrailingZeros :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : UInt<32>, A_out : UInt<6>}

    node _trailingZeros_T = bits(io.A_in, 0, 0) @[OneHot.scala 47:45]
    node _trailingZeros_T_1 = bits(io.A_in, 1, 1) @[OneHot.scala 47:45]
    node _trailingZeros_T_2 = bits(io.A_in, 2, 2) @[OneHot.scala 47:45]
    node _trailingZeros_T_3 = bits(io.A_in, 3, 3) @[OneHot.scala 47:45]
    node _trailingZeros_T_4 = bits(io.A_in, 4, 4) @[OneHot.scala 47:45]
    node _trailingZeros_T_5 = bits(io.A_in, 5, 5) @[OneHot.scala 47:45]
    node _trailingZeros_T_6 = bits(io.A_in, 6, 6) @[OneHot.scala 47:45]
    node _trailingZeros_T_7 = bits(io.A_in, 7, 7) @[OneHot.scala 47:45]
    node _trailingZeros_T_8 = bits(io.A_in, 8, 8) @[OneHot.scala 47:45]
    node _trailingZeros_T_9 = bits(io.A_in, 9, 9) @[OneHot.scala 47:45]
    node _trailingZeros_T_10 = bits(io.A_in, 10, 10) @[OneHot.scala 47:45]
    node _trailingZeros_T_11 = bits(io.A_in, 11, 11) @[OneHot.scala 47:45]
    node _trailingZeros_T_12 = bits(io.A_in, 12, 12) @[OneHot.scala 47:45]
    node _trailingZeros_T_13 = bits(io.A_in, 13, 13) @[OneHot.scala 47:45]
    node _trailingZeros_T_14 = bits(io.A_in, 14, 14) @[OneHot.scala 47:45]
    node _trailingZeros_T_15 = bits(io.A_in, 15, 15) @[OneHot.scala 47:45]
    node _trailingZeros_T_16 = bits(io.A_in, 16, 16) @[OneHot.scala 47:45]
    node _trailingZeros_T_17 = bits(io.A_in, 17, 17) @[OneHot.scala 47:45]
    node _trailingZeros_T_18 = bits(io.A_in, 18, 18) @[OneHot.scala 47:45]
    node _trailingZeros_T_19 = bits(io.A_in, 19, 19) @[OneHot.scala 47:45]
    node _trailingZeros_T_20 = bits(io.A_in, 20, 20) @[OneHot.scala 47:45]
    node _trailingZeros_T_21 = bits(io.A_in, 21, 21) @[OneHot.scala 47:45]
    node _trailingZeros_T_22 = bits(io.A_in, 22, 22) @[OneHot.scala 47:45]
    node _trailingZeros_T_23 = bits(io.A_in, 23, 23) @[OneHot.scala 47:45]
    node _trailingZeros_T_24 = bits(io.A_in, 24, 24) @[OneHot.scala 47:45]
    node _trailingZeros_T_25 = bits(io.A_in, 25, 25) @[OneHot.scala 47:45]
    node _trailingZeros_T_26 = bits(io.A_in, 26, 26) @[OneHot.scala 47:45]
    node _trailingZeros_T_27 = bits(io.A_in, 27, 27) @[OneHot.scala 47:45]
    node _trailingZeros_T_28 = bits(io.A_in, 28, 28) @[OneHot.scala 47:45]
    node _trailingZeros_T_29 = bits(io.A_in, 29, 29) @[OneHot.scala 47:45]
    node _trailingZeros_T_30 = bits(io.A_in, 30, 30) @[OneHot.scala 47:45]
    node _trailingZeros_T_31 = bits(io.A_in, 31, 31) @[OneHot.scala 47:45]
    node _trailingZeros_T_32 = mux(_trailingZeros_T_30, UInt<5>("h1e"), UInt<5>("h1f")) @[Mux.scala 47:70]
    node _trailingZeros_T_33 = mux(_trailingZeros_T_29, UInt<5>("h1d"), _trailingZeros_T_32) @[Mux.scala 47:70]
    node _trailingZeros_T_34 = mux(_trailingZeros_T_28, UInt<5>("h1c"), _trailingZeros_T_33) @[Mux.scala 47:70]
    node _trailingZeros_T_35 = mux(_trailingZeros_T_27, UInt<5>("h1b"), _trailingZeros_T_34) @[Mux.scala 47:70]
    node _trailingZeros_T_36 = mux(_trailingZeros_T_26, UInt<5>("h1a"), _trailingZeros_T_35) @[Mux.scala 47:70]
    node _trailingZeros_T_37 = mux(_trailingZeros_T_25, UInt<5>("h19"), _trailingZeros_T_36) @[Mux.scala 47:70]
    node _trailingZeros_T_38 = mux(_trailingZeros_T_24, UInt<5>("h18"), _trailingZeros_T_37) @[Mux.scala 47:70]
    node _trailingZeros_T_39 = mux(_trailingZeros_T_23, UInt<5>("h17"), _trailingZeros_T_38) @[Mux.scala 47:70]
    node _trailingZeros_T_40 = mux(_trailingZeros_T_22, UInt<5>("h16"), _trailingZeros_T_39) @[Mux.scala 47:70]
    node _trailingZeros_T_41 = mux(_trailingZeros_T_21, UInt<5>("h15"), _trailingZeros_T_40) @[Mux.scala 47:70]
    node _trailingZeros_T_42 = mux(_trailingZeros_T_20, UInt<5>("h14"), _trailingZeros_T_41) @[Mux.scala 47:70]
    node _trailingZeros_T_43 = mux(_trailingZeros_T_19, UInt<5>("h13"), _trailingZeros_T_42) @[Mux.scala 47:70]
    node _trailingZeros_T_44 = mux(_trailingZeros_T_18, UInt<5>("h12"), _trailingZeros_T_43) @[Mux.scala 47:70]
    node _trailingZeros_T_45 = mux(_trailingZeros_T_17, UInt<5>("h11"), _trailingZeros_T_44) @[Mux.scala 47:70]
    node _trailingZeros_T_46 = mux(_trailingZeros_T_16, UInt<5>("h10"), _trailingZeros_T_45) @[Mux.scala 47:70]
    node _trailingZeros_T_47 = mux(_trailingZeros_T_15, UInt<4>("hf"), _trailingZeros_T_46) @[Mux.scala 47:70]
    node _trailingZeros_T_48 = mux(_trailingZeros_T_14, UInt<4>("he"), _trailingZeros_T_47) @[Mux.scala 47:70]
    node _trailingZeros_T_49 = mux(_trailingZeros_T_13, UInt<4>("hd"), _trailingZeros_T_48) @[Mux.scala 47:70]
    node _trailingZeros_T_50 = mux(_trailingZeros_T_12, UInt<4>("hc"), _trailingZeros_T_49) @[Mux.scala 47:70]
    node _trailingZeros_T_51 = mux(_trailingZeros_T_11, UInt<4>("hb"), _trailingZeros_T_50) @[Mux.scala 47:70]
    node _trailingZeros_T_52 = mux(_trailingZeros_T_10, UInt<4>("ha"), _trailingZeros_T_51) @[Mux.scala 47:70]
    node _trailingZeros_T_53 = mux(_trailingZeros_T_9, UInt<4>("h9"), _trailingZeros_T_52) @[Mux.scala 47:70]
    node _trailingZeros_T_54 = mux(_trailingZeros_T_8, UInt<4>("h8"), _trailingZeros_T_53) @[Mux.scala 47:70]
    node _trailingZeros_T_55 = mux(_trailingZeros_T_7, UInt<3>("h7"), _trailingZeros_T_54) @[Mux.scala 47:70]
    node _trailingZeros_T_56 = mux(_trailingZeros_T_6, UInt<3>("h6"), _trailingZeros_T_55) @[Mux.scala 47:70]
    node _trailingZeros_T_57 = mux(_trailingZeros_T_5, UInt<3>("h5"), _trailingZeros_T_56) @[Mux.scala 47:70]
    node _trailingZeros_T_58 = mux(_trailingZeros_T_4, UInt<3>("h4"), _trailingZeros_T_57) @[Mux.scala 47:70]
    node _trailingZeros_T_59 = mux(_trailingZeros_T_3, UInt<2>("h3"), _trailingZeros_T_58) @[Mux.scala 47:70]
    node _trailingZeros_T_60 = mux(_trailingZeros_T_2, UInt<2>("h2"), _trailingZeros_T_59) @[Mux.scala 47:70]
    node _trailingZeros_T_61 = mux(_trailingZeros_T_1, UInt<1>("h1"), _trailingZeros_T_60) @[Mux.scala 47:70]
    node trailingZeros = mux(_trailingZeros_T, UInt<1>("h0"), _trailingZeros_T_61) @[Mux.scala 47:70]
    node _io_A_out_T = eq(io.A_in, UInt<1>("h0")) @[RISCVALU.scala 125:27]
    node _io_A_out_T_1 = mux(_io_A_out_T, UInt<6>("h20"), trailingZeros) @[RISCVALU.scala 125:18]
    io.A_out <= _io_A_out_T_1 @[RISCVALU.scala 125:12]

  module CountPopulation :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : UInt<32>, A_out : UInt<32>}

    node _io_A_out_T = bits(io.A_in, 0, 0) @[Bitwise.scala 53:100]
    node _io_A_out_T_1 = bits(io.A_in, 1, 1) @[Bitwise.scala 53:100]
    node _io_A_out_T_2 = bits(io.A_in, 2, 2) @[Bitwise.scala 53:100]
    node _io_A_out_T_3 = bits(io.A_in, 3, 3) @[Bitwise.scala 53:100]
    node _io_A_out_T_4 = bits(io.A_in, 4, 4) @[Bitwise.scala 53:100]
    node _io_A_out_T_5 = bits(io.A_in, 5, 5) @[Bitwise.scala 53:100]
    node _io_A_out_T_6 = bits(io.A_in, 6, 6) @[Bitwise.scala 53:100]
    node _io_A_out_T_7 = bits(io.A_in, 7, 7) @[Bitwise.scala 53:100]
    node _io_A_out_T_8 = bits(io.A_in, 8, 8) @[Bitwise.scala 53:100]
    node _io_A_out_T_9 = bits(io.A_in, 9, 9) @[Bitwise.scala 53:100]
    node _io_A_out_T_10 = bits(io.A_in, 10, 10) @[Bitwise.scala 53:100]
    node _io_A_out_T_11 = bits(io.A_in, 11, 11) @[Bitwise.scala 53:100]
    node _io_A_out_T_12 = bits(io.A_in, 12, 12) @[Bitwise.scala 53:100]
    node _io_A_out_T_13 = bits(io.A_in, 13, 13) @[Bitwise.scala 53:100]
    node _io_A_out_T_14 = bits(io.A_in, 14, 14) @[Bitwise.scala 53:100]
    node _io_A_out_T_15 = bits(io.A_in, 15, 15) @[Bitwise.scala 53:100]
    node _io_A_out_T_16 = bits(io.A_in, 16, 16) @[Bitwise.scala 53:100]
    node _io_A_out_T_17 = bits(io.A_in, 17, 17) @[Bitwise.scala 53:100]
    node _io_A_out_T_18 = bits(io.A_in, 18, 18) @[Bitwise.scala 53:100]
    node _io_A_out_T_19 = bits(io.A_in, 19, 19) @[Bitwise.scala 53:100]
    node _io_A_out_T_20 = bits(io.A_in, 20, 20) @[Bitwise.scala 53:100]
    node _io_A_out_T_21 = bits(io.A_in, 21, 21) @[Bitwise.scala 53:100]
    node _io_A_out_T_22 = bits(io.A_in, 22, 22) @[Bitwise.scala 53:100]
    node _io_A_out_T_23 = bits(io.A_in, 23, 23) @[Bitwise.scala 53:100]
    node _io_A_out_T_24 = bits(io.A_in, 24, 24) @[Bitwise.scala 53:100]
    node _io_A_out_T_25 = bits(io.A_in, 25, 25) @[Bitwise.scala 53:100]
    node _io_A_out_T_26 = bits(io.A_in, 26, 26) @[Bitwise.scala 53:100]
    node _io_A_out_T_27 = bits(io.A_in, 27, 27) @[Bitwise.scala 53:100]
    node _io_A_out_T_28 = bits(io.A_in, 28, 28) @[Bitwise.scala 53:100]
    node _io_A_out_T_29 = bits(io.A_in, 29, 29) @[Bitwise.scala 53:100]
    node _io_A_out_T_30 = bits(io.A_in, 30, 30) @[Bitwise.scala 53:100]
    node _io_A_out_T_31 = bits(io.A_in, 31, 31) @[Bitwise.scala 53:100]
    node _io_A_out_T_32 = add(_io_A_out_T, _io_A_out_T_1) @[Bitwise.scala 51:90]
    node _io_A_out_T_33 = bits(_io_A_out_T_32, 1, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_34 = add(_io_A_out_T_2, _io_A_out_T_3) @[Bitwise.scala 51:90]
    node _io_A_out_T_35 = bits(_io_A_out_T_34, 1, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_36 = add(_io_A_out_T_33, _io_A_out_T_35) @[Bitwise.scala 51:90]
    node _io_A_out_T_37 = bits(_io_A_out_T_36, 2, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_38 = add(_io_A_out_T_4, _io_A_out_T_5) @[Bitwise.scala 51:90]
    node _io_A_out_T_39 = bits(_io_A_out_T_38, 1, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_40 = add(_io_A_out_T_6, _io_A_out_T_7) @[Bitwise.scala 51:90]
    node _io_A_out_T_41 = bits(_io_A_out_T_40, 1, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_42 = add(_io_A_out_T_39, _io_A_out_T_41) @[Bitwise.scala 51:90]
    node _io_A_out_T_43 = bits(_io_A_out_T_42, 2, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_44 = add(_io_A_out_T_37, _io_A_out_T_43) @[Bitwise.scala 51:90]
    node _io_A_out_T_45 = bits(_io_A_out_T_44, 3, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_46 = add(_io_A_out_T_8, _io_A_out_T_9) @[Bitwise.scala 51:90]
    node _io_A_out_T_47 = bits(_io_A_out_T_46, 1, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_48 = add(_io_A_out_T_10, _io_A_out_T_11) @[Bitwise.scala 51:90]
    node _io_A_out_T_49 = bits(_io_A_out_T_48, 1, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_50 = add(_io_A_out_T_47, _io_A_out_T_49) @[Bitwise.scala 51:90]
    node _io_A_out_T_51 = bits(_io_A_out_T_50, 2, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_52 = add(_io_A_out_T_12, _io_A_out_T_13) @[Bitwise.scala 51:90]
    node _io_A_out_T_53 = bits(_io_A_out_T_52, 1, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_54 = add(_io_A_out_T_14, _io_A_out_T_15) @[Bitwise.scala 51:90]
    node _io_A_out_T_55 = bits(_io_A_out_T_54, 1, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_56 = add(_io_A_out_T_53, _io_A_out_T_55) @[Bitwise.scala 51:90]
    node _io_A_out_T_57 = bits(_io_A_out_T_56, 2, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_58 = add(_io_A_out_T_51, _io_A_out_T_57) @[Bitwise.scala 51:90]
    node _io_A_out_T_59 = bits(_io_A_out_T_58, 3, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_60 = add(_io_A_out_T_45, _io_A_out_T_59) @[Bitwise.scala 51:90]
    node _io_A_out_T_61 = bits(_io_A_out_T_60, 4, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_62 = add(_io_A_out_T_16, _io_A_out_T_17) @[Bitwise.scala 51:90]
    node _io_A_out_T_63 = bits(_io_A_out_T_62, 1, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_64 = add(_io_A_out_T_18, _io_A_out_T_19) @[Bitwise.scala 51:90]
    node _io_A_out_T_65 = bits(_io_A_out_T_64, 1, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_66 = add(_io_A_out_T_63, _io_A_out_T_65) @[Bitwise.scala 51:90]
    node _io_A_out_T_67 = bits(_io_A_out_T_66, 2, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_68 = add(_io_A_out_T_20, _io_A_out_T_21) @[Bitwise.scala 51:90]
    node _io_A_out_T_69 = bits(_io_A_out_T_68, 1, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_70 = add(_io_A_out_T_22, _io_A_out_T_23) @[Bitwise.scala 51:90]
    node _io_A_out_T_71 = bits(_io_A_out_T_70, 1, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_72 = add(_io_A_out_T_69, _io_A_out_T_71) @[Bitwise.scala 51:90]
    node _io_A_out_T_73 = bits(_io_A_out_T_72, 2, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_74 = add(_io_A_out_T_67, _io_A_out_T_73) @[Bitwise.scala 51:90]
    node _io_A_out_T_75 = bits(_io_A_out_T_74, 3, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_76 = add(_io_A_out_T_24, _io_A_out_T_25) @[Bitwise.scala 51:90]
    node _io_A_out_T_77 = bits(_io_A_out_T_76, 1, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_78 = add(_io_A_out_T_26, _io_A_out_T_27) @[Bitwise.scala 51:90]
    node _io_A_out_T_79 = bits(_io_A_out_T_78, 1, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_80 = add(_io_A_out_T_77, _io_A_out_T_79) @[Bitwise.scala 51:90]
    node _io_A_out_T_81 = bits(_io_A_out_T_80, 2, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_82 = add(_io_A_out_T_28, _io_A_out_T_29) @[Bitwise.scala 51:90]
    node _io_A_out_T_83 = bits(_io_A_out_T_82, 1, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_84 = add(_io_A_out_T_30, _io_A_out_T_31) @[Bitwise.scala 51:90]
    node _io_A_out_T_85 = bits(_io_A_out_T_84, 1, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_86 = add(_io_A_out_T_83, _io_A_out_T_85) @[Bitwise.scala 51:90]
    node _io_A_out_T_87 = bits(_io_A_out_T_86, 2, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_88 = add(_io_A_out_T_81, _io_A_out_T_87) @[Bitwise.scala 51:90]
    node _io_A_out_T_89 = bits(_io_A_out_T_88, 3, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_90 = add(_io_A_out_T_75, _io_A_out_T_89) @[Bitwise.scala 51:90]
    node _io_A_out_T_91 = bits(_io_A_out_T_90, 4, 0) @[Bitwise.scala 51:90]
    node _io_A_out_T_92 = add(_io_A_out_T_61, _io_A_out_T_91) @[Bitwise.scala 51:90]
    node _io_A_out_T_93 = bits(_io_A_out_T_92, 5, 0) @[Bitwise.scala 51:90]
    io.A_out <= _io_A_out_T_93 @[RISCVALU.scala 136:12]

  module MaxInstruction :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : SInt<32>, flip B_in : SInt<32>, max : UInt<32>}

    node _io_max_T = lt(io.A_in, io.B_in) @[RISCVALU.scala 148:25]
    node _io_max_T_1 = mux(_io_max_T, io.B_in, io.A_in) @[RISCVALU.scala 148:16]
    node _io_max_T_2 = asUInt(_io_max_T_1) @[RISCVALU.scala 148:54]
    io.max <= _io_max_T_2 @[RISCVALU.scala 148:10]

  module MaxUInstruction :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : UInt<32>, flip B_in : UInt<32>, maxu : UInt<32>}

    node _io_maxu_T = lt(io.A_in, io.B_in) @[RISCVALU.scala 160:26]
    node _io_maxu_T_1 = mux(_io_maxu_T, io.B_in, io.A_in) @[RISCVALU.scala 160:17]
    io.maxu <= _io_maxu_T_1 @[RISCVALU.scala 160:11]

  module MinInstruction :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : SInt<32>, flip B_in : SInt<32>, min : UInt<32>}

    node _io_min_T = lt(io.A_in, io.B_in) @[RISCVALU.scala 172:25]
    node _io_min_T_1 = mux(_io_min_T, io.A_in, io.B_in) @[RISCVALU.scala 172:16]
    node _io_min_T_2 = asUInt(_io_min_T_1) @[RISCVALU.scala 172:54]
    io.min <= _io_min_T_2 @[RISCVALU.scala 172:10]

  module MinUInstruction :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : UInt<32>, flip B_in : UInt<32>, minu : UInt<32>}

    node _io_minu_T = lt(io.A_in, io.B_in) @[RISCVALU.scala 184:26]
    node _io_minu_T_1 = mux(_io_minu_T, io.A_in, io.B_in) @[RISCVALU.scala 184:17]
    io.minu <= _io_minu_T_1 @[RISCVALU.scala 184:11]

  module SextB :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : UInt<32>, A_out : UInt<32>}

    node byte = bits(io.A_in, 7, 0) @[RISCVALU.scala 195:21]
    node _signExtended_T = bits(byte, 7, 7) @[RISCVALU.scala 198:39]
    node _signExtended_T_1 = bits(_signExtended_T, 0, 0) @[Bitwise.scala 77:15]
    node _signExtended_T_2 = mux(_signExtended_T_1, UInt<24>("hffffff"), UInt<24>("h0")) @[Bitwise.scala 77:12]
    node signExtended = cat(_signExtended_T_2, byte) @[Cat.scala 33:92]
    io.A_out <= signExtended @[RISCVALU.scala 201:12]

  module SextH :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : UInt<32>, A_out : UInt<32>}

    node halfword = bits(io.A_in, 15, 0) @[RISCVALU.scala 212:25]
    node _signExtendedH_T = bits(halfword, 15, 15) @[RISCVALU.scala 215:44]
    node _signExtendedH_T_1 = bits(_signExtendedH_T, 0, 0) @[Bitwise.scala 77:15]
    node _signExtendedH_T_2 = mux(_signExtendedH_T_1, UInt<16>("hffff"), UInt<16>("h0")) @[Bitwise.scala 77:12]
    node signExtendedH = cat(_signExtendedH_T_2, halfword) @[Cat.scala 33:92]
    io.A_out <= signExtendedH @[RISCVALU.scala 218:12]

  module ZextH :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : UInt<32>, A_out : UInt<32>}

    node _io_A_out_T = bits(io.A_in, 15, 0) @[RISCVALU.scala 229:22]
    node _io_A_out_T_1 = mux(UInt<1>("h1"), UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 77:12]
    node _io_A_out_T_2 = and(_io_A_out_T, _io_A_out_T_1) @[RISCVALU.scala 229:37]
    io.A_out <= _io_A_out_T_2 @[RISCVALU.scala 229:12]

  module OrcB :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : UInt<32>, A_out : UInt<32>}

    wire inputBytes : UInt<8>[4] @[RISCVALU.scala 241:24]
    node _inputBytes_0_T = bits(io.A_in, 7, 0) @[RISCVALU.scala 245:29]
    inputBytes[0] <= _inputBytes_0_T @[RISCVALU.scala 245:19]
    node _inputBytes_1_T = bits(io.A_in, 15, 8) @[RISCVALU.scala 245:29]
    inputBytes[1] <= _inputBytes_1_T @[RISCVALU.scala 245:19]
    node _inputBytes_2_T = bits(io.A_in, 23, 16) @[RISCVALU.scala 245:29]
    inputBytes[2] <= _inputBytes_2_T @[RISCVALU.scala 245:19]
    node _inputBytes_3_T = bits(io.A_in, 31, 24) @[RISCVALU.scala 245:29]
    inputBytes[3] <= _inputBytes_3_T @[RISCVALU.scala 245:19]
    wire outputBytes : UInt<8>[4] @[RISCVALU.scala 249:25]
    node _T = eq(inputBytes[0], UInt<1>("h0")) @[RISCVALU.scala 253:24]
    when _T : @[RISCVALU.scala 253:33]
      outputBytes[0] <= UInt<1>("h0") @[RISCVALU.scala 254:22]
    else :
      outputBytes[0] <= UInt<8>("hff") @[RISCVALU.scala 256:22]
    node _T_1 = eq(inputBytes[1], UInt<1>("h0")) @[RISCVALU.scala 253:24]
    when _T_1 : @[RISCVALU.scala 253:33]
      outputBytes[1] <= UInt<1>("h0") @[RISCVALU.scala 254:22]
    else :
      outputBytes[1] <= UInt<8>("hff") @[RISCVALU.scala 256:22]
    node _T_2 = eq(inputBytes[2], UInt<1>("h0")) @[RISCVALU.scala 253:24]
    when _T_2 : @[RISCVALU.scala 253:33]
      outputBytes[2] <= UInt<1>("h0") @[RISCVALU.scala 254:22]
    else :
      outputBytes[2] <= UInt<8>("hff") @[RISCVALU.scala 256:22]
    node _T_3 = eq(inputBytes[3], UInt<1>("h0")) @[RISCVALU.scala 253:24]
    when _T_3 : @[RISCVALU.scala 253:33]
      outputBytes[3] <= UInt<1>("h0") @[RISCVALU.scala 254:22]
    else :
      outputBytes[3] <= UInt<8>("hff") @[RISCVALU.scala 256:22]
    node io_A_out_lo = cat(outputBytes[1], outputBytes[0]) @[RISCVALU.scala 261:27]
    node io_A_out_hi = cat(outputBytes[3], outputBytes[2]) @[RISCVALU.scala 261:27]
    node _io_A_out_T = cat(io_A_out_hi, io_A_out_lo) @[RISCVALU.scala 261:27]
    io.A_out <= _io_A_out_T @[RISCVALU.scala 261:12]

  module Rev8 :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : UInt<32>, A_out : UInt<32>}

    wire ByteOrder : UInt<8>[4] @[RISCVALU.scala 275:23]
    node _ByteOrder_0_T = bits(io.A_in, 7, 0) @[RISCVALU.scala 277:28]
    ByteOrder[0] <= _ByteOrder_0_T @[RISCVALU.scala 277:18]
    node _ByteOrder_1_T = bits(io.A_in, 15, 8) @[RISCVALU.scala 277:28]
    ByteOrder[1] <= _ByteOrder_1_T @[RISCVALU.scala 277:18]
    node _ByteOrder_2_T = bits(io.A_in, 23, 16) @[RISCVALU.scala 277:28]
    ByteOrder[2] <= _ByteOrder_2_T @[RISCVALU.scala 277:18]
    node _ByteOrder_3_T = bits(io.A_in, 31, 24) @[RISCVALU.scala 277:28]
    ByteOrder[3] <= _ByteOrder_3_T @[RISCVALU.scala 277:18]
    wire _io_A_out_WIRE : UInt<8>[4] @[RISCVALU.scala 284:22]
    _io_A_out_WIRE[0] <= ByteOrder[3] @[RISCVALU.scala 284:22]
    _io_A_out_WIRE[1] <= ByteOrder[2] @[RISCVALU.scala 284:22]
    _io_A_out_WIRE[2] <= ByteOrder[1] @[RISCVALU.scala 284:22]
    _io_A_out_WIRE[3] <= ByteOrder[0] @[RISCVALU.scala 284:22]
    node io_A_out_lo = cat(_io_A_out_WIRE[1], _io_A_out_WIRE[0]) @[RISCVALU.scala 284:37]
    node io_A_out_hi = cat(_io_A_out_WIRE[3], _io_A_out_WIRE[2]) @[RISCVALU.scala 284:37]
    node _io_A_out_T = cat(io_A_out_hi, io_A_out_lo) @[RISCVALU.scala 284:37]
    io.A_out <= _io_A_out_T @[RISCVALU.scala 284:12]

  module Clmul :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : UInt<32>, flip B_in : UInt<32>, C_out : UInt<32>}

    node _terms_shifted_T = shl(io.A_in, 0) @[RISCVALU.scala 297:28]
    node terms_shifted = bits(_terms_shifted_T, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T = bits(io.B_in, 0, 0) @[RISCVALU.scala 298:16]
    node terms_0 = mux(_terms_T, terms_shifted, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_1 = shl(io.A_in, 1) @[RISCVALU.scala 297:28]
    node terms_shifted_1 = bits(_terms_shifted_T_1, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_1 = bits(io.B_in, 1, 1) @[RISCVALU.scala 298:16]
    node terms_1 = mux(_terms_T_1, terms_shifted_1, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_2 = shl(io.A_in, 2) @[RISCVALU.scala 297:28]
    node terms_shifted_2 = bits(_terms_shifted_T_2, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_2 = bits(io.B_in, 2, 2) @[RISCVALU.scala 298:16]
    node terms_2 = mux(_terms_T_2, terms_shifted_2, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_3 = shl(io.A_in, 3) @[RISCVALU.scala 297:28]
    node terms_shifted_3 = bits(_terms_shifted_T_3, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_3 = bits(io.B_in, 3, 3) @[RISCVALU.scala 298:16]
    node terms_3 = mux(_terms_T_3, terms_shifted_3, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_4 = shl(io.A_in, 4) @[RISCVALU.scala 297:28]
    node terms_shifted_4 = bits(_terms_shifted_T_4, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_4 = bits(io.B_in, 4, 4) @[RISCVALU.scala 298:16]
    node terms_4 = mux(_terms_T_4, terms_shifted_4, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_5 = shl(io.A_in, 5) @[RISCVALU.scala 297:28]
    node terms_shifted_5 = bits(_terms_shifted_T_5, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_5 = bits(io.B_in, 5, 5) @[RISCVALU.scala 298:16]
    node terms_5 = mux(_terms_T_5, terms_shifted_5, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_6 = shl(io.A_in, 6) @[RISCVALU.scala 297:28]
    node terms_shifted_6 = bits(_terms_shifted_T_6, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_6 = bits(io.B_in, 6, 6) @[RISCVALU.scala 298:16]
    node terms_6 = mux(_terms_T_6, terms_shifted_6, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_7 = shl(io.A_in, 7) @[RISCVALU.scala 297:28]
    node terms_shifted_7 = bits(_terms_shifted_T_7, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_7 = bits(io.B_in, 7, 7) @[RISCVALU.scala 298:16]
    node terms_7 = mux(_terms_T_7, terms_shifted_7, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_8 = shl(io.A_in, 8) @[RISCVALU.scala 297:28]
    node terms_shifted_8 = bits(_terms_shifted_T_8, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_8 = bits(io.B_in, 8, 8) @[RISCVALU.scala 298:16]
    node terms_8 = mux(_terms_T_8, terms_shifted_8, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_9 = shl(io.A_in, 9) @[RISCVALU.scala 297:28]
    node terms_shifted_9 = bits(_terms_shifted_T_9, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_9 = bits(io.B_in, 9, 9) @[RISCVALU.scala 298:16]
    node terms_9 = mux(_terms_T_9, terms_shifted_9, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_10 = shl(io.A_in, 10) @[RISCVALU.scala 297:28]
    node terms_shifted_10 = bits(_terms_shifted_T_10, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_10 = bits(io.B_in, 10, 10) @[RISCVALU.scala 298:16]
    node terms_10 = mux(_terms_T_10, terms_shifted_10, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_11 = shl(io.A_in, 11) @[RISCVALU.scala 297:28]
    node terms_shifted_11 = bits(_terms_shifted_T_11, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_11 = bits(io.B_in, 11, 11) @[RISCVALU.scala 298:16]
    node terms_11 = mux(_terms_T_11, terms_shifted_11, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_12 = shl(io.A_in, 12) @[RISCVALU.scala 297:28]
    node terms_shifted_12 = bits(_terms_shifted_T_12, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_12 = bits(io.B_in, 12, 12) @[RISCVALU.scala 298:16]
    node terms_12 = mux(_terms_T_12, terms_shifted_12, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_13 = shl(io.A_in, 13) @[RISCVALU.scala 297:28]
    node terms_shifted_13 = bits(_terms_shifted_T_13, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_13 = bits(io.B_in, 13, 13) @[RISCVALU.scala 298:16]
    node terms_13 = mux(_terms_T_13, terms_shifted_13, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_14 = shl(io.A_in, 14) @[RISCVALU.scala 297:28]
    node terms_shifted_14 = bits(_terms_shifted_T_14, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_14 = bits(io.B_in, 14, 14) @[RISCVALU.scala 298:16]
    node terms_14 = mux(_terms_T_14, terms_shifted_14, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_15 = shl(io.A_in, 15) @[RISCVALU.scala 297:28]
    node terms_shifted_15 = bits(_terms_shifted_T_15, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_15 = bits(io.B_in, 15, 15) @[RISCVALU.scala 298:16]
    node terms_15 = mux(_terms_T_15, terms_shifted_15, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_16 = shl(io.A_in, 16) @[RISCVALU.scala 297:28]
    node terms_shifted_16 = bits(_terms_shifted_T_16, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_16 = bits(io.B_in, 16, 16) @[RISCVALU.scala 298:16]
    node terms_16 = mux(_terms_T_16, terms_shifted_16, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_17 = shl(io.A_in, 17) @[RISCVALU.scala 297:28]
    node terms_shifted_17 = bits(_terms_shifted_T_17, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_17 = bits(io.B_in, 17, 17) @[RISCVALU.scala 298:16]
    node terms_17 = mux(_terms_T_17, terms_shifted_17, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_18 = shl(io.A_in, 18) @[RISCVALU.scala 297:28]
    node terms_shifted_18 = bits(_terms_shifted_T_18, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_18 = bits(io.B_in, 18, 18) @[RISCVALU.scala 298:16]
    node terms_18 = mux(_terms_T_18, terms_shifted_18, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_19 = shl(io.A_in, 19) @[RISCVALU.scala 297:28]
    node terms_shifted_19 = bits(_terms_shifted_T_19, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_19 = bits(io.B_in, 19, 19) @[RISCVALU.scala 298:16]
    node terms_19 = mux(_terms_T_19, terms_shifted_19, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_20 = shl(io.A_in, 20) @[RISCVALU.scala 297:28]
    node terms_shifted_20 = bits(_terms_shifted_T_20, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_20 = bits(io.B_in, 20, 20) @[RISCVALU.scala 298:16]
    node terms_20 = mux(_terms_T_20, terms_shifted_20, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_21 = shl(io.A_in, 21) @[RISCVALU.scala 297:28]
    node terms_shifted_21 = bits(_terms_shifted_T_21, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_21 = bits(io.B_in, 21, 21) @[RISCVALU.scala 298:16]
    node terms_21 = mux(_terms_T_21, terms_shifted_21, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_22 = shl(io.A_in, 22) @[RISCVALU.scala 297:28]
    node terms_shifted_22 = bits(_terms_shifted_T_22, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_22 = bits(io.B_in, 22, 22) @[RISCVALU.scala 298:16]
    node terms_22 = mux(_terms_T_22, terms_shifted_22, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_23 = shl(io.A_in, 23) @[RISCVALU.scala 297:28]
    node terms_shifted_23 = bits(_terms_shifted_T_23, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_23 = bits(io.B_in, 23, 23) @[RISCVALU.scala 298:16]
    node terms_23 = mux(_terms_T_23, terms_shifted_23, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_24 = shl(io.A_in, 24) @[RISCVALU.scala 297:28]
    node terms_shifted_24 = bits(_terms_shifted_T_24, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_24 = bits(io.B_in, 24, 24) @[RISCVALU.scala 298:16]
    node terms_24 = mux(_terms_T_24, terms_shifted_24, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_25 = shl(io.A_in, 25) @[RISCVALU.scala 297:28]
    node terms_shifted_25 = bits(_terms_shifted_T_25, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_25 = bits(io.B_in, 25, 25) @[RISCVALU.scala 298:16]
    node terms_25 = mux(_terms_T_25, terms_shifted_25, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_26 = shl(io.A_in, 26) @[RISCVALU.scala 297:28]
    node terms_shifted_26 = bits(_terms_shifted_T_26, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_26 = bits(io.B_in, 26, 26) @[RISCVALU.scala 298:16]
    node terms_26 = mux(_terms_T_26, terms_shifted_26, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_27 = shl(io.A_in, 27) @[RISCVALU.scala 297:28]
    node terms_shifted_27 = bits(_terms_shifted_T_27, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_27 = bits(io.B_in, 27, 27) @[RISCVALU.scala 298:16]
    node terms_27 = mux(_terms_T_27, terms_shifted_27, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_28 = shl(io.A_in, 28) @[RISCVALU.scala 297:28]
    node terms_shifted_28 = bits(_terms_shifted_T_28, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_28 = bits(io.B_in, 28, 28) @[RISCVALU.scala 298:16]
    node terms_28 = mux(_terms_T_28, terms_shifted_28, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_29 = shl(io.A_in, 29) @[RISCVALU.scala 297:28]
    node terms_shifted_29 = bits(_terms_shifted_T_29, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_29 = bits(io.B_in, 29, 29) @[RISCVALU.scala 298:16]
    node terms_29 = mux(_terms_T_29, terms_shifted_29, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_30 = shl(io.A_in, 30) @[RISCVALU.scala 297:28]
    node terms_shifted_30 = bits(_terms_shifted_T_30, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_30 = bits(io.B_in, 30, 30) @[RISCVALU.scala 298:16]
    node terms_30 = mux(_terms_T_30, terms_shifted_30, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _terms_shifted_T_31 = shl(io.A_in, 31) @[RISCVALU.scala 297:28]
    node terms_shifted_31 = bits(_terms_shifted_T_31, 31, 0) @[RISCVALU.scala 297:33]
    node _terms_T_31 = bits(io.B_in, 31, 31) @[RISCVALU.scala 298:16]
    node terms_31 = mux(_terms_T_31, terms_shifted_31, UInt<1>("h0")) @[RISCVALU.scala 298:8]
    node _io_C_out_T = xor(terms_0, terms_1) @[RISCVALU.scala 302:30]
    node _io_C_out_T_1 = xor(_io_C_out_T, terms_2) @[RISCVALU.scala 302:30]
    node _io_C_out_T_2 = xor(_io_C_out_T_1, terms_3) @[RISCVALU.scala 302:30]
    node _io_C_out_T_3 = xor(_io_C_out_T_2, terms_4) @[RISCVALU.scala 302:30]
    node _io_C_out_T_4 = xor(_io_C_out_T_3, terms_5) @[RISCVALU.scala 302:30]
    node _io_C_out_T_5 = xor(_io_C_out_T_4, terms_6) @[RISCVALU.scala 302:30]
    node _io_C_out_T_6 = xor(_io_C_out_T_5, terms_7) @[RISCVALU.scala 302:30]
    node _io_C_out_T_7 = xor(_io_C_out_T_6, terms_8) @[RISCVALU.scala 302:30]
    node _io_C_out_T_8 = xor(_io_C_out_T_7, terms_9) @[RISCVALU.scala 302:30]
    node _io_C_out_T_9 = xor(_io_C_out_T_8, terms_10) @[RISCVALU.scala 302:30]
    node _io_C_out_T_10 = xor(_io_C_out_T_9, terms_11) @[RISCVALU.scala 302:30]
    node _io_C_out_T_11 = xor(_io_C_out_T_10, terms_12) @[RISCVALU.scala 302:30]
    node _io_C_out_T_12 = xor(_io_C_out_T_11, terms_13) @[RISCVALU.scala 302:30]
    node _io_C_out_T_13 = xor(_io_C_out_T_12, terms_14) @[RISCVALU.scala 302:30]
    node _io_C_out_T_14 = xor(_io_C_out_T_13, terms_15) @[RISCVALU.scala 302:30]
    node _io_C_out_T_15 = xor(_io_C_out_T_14, terms_16) @[RISCVALU.scala 302:30]
    node _io_C_out_T_16 = xor(_io_C_out_T_15, terms_17) @[RISCVALU.scala 302:30]
    node _io_C_out_T_17 = xor(_io_C_out_T_16, terms_18) @[RISCVALU.scala 302:30]
    node _io_C_out_T_18 = xor(_io_C_out_T_17, terms_19) @[RISCVALU.scala 302:30]
    node _io_C_out_T_19 = xor(_io_C_out_T_18, terms_20) @[RISCVALU.scala 302:30]
    node _io_C_out_T_20 = xor(_io_C_out_T_19, terms_21) @[RISCVALU.scala 302:30]
    node _io_C_out_T_21 = xor(_io_C_out_T_20, terms_22) @[RISCVALU.scala 302:30]
    node _io_C_out_T_22 = xor(_io_C_out_T_21, terms_23) @[RISCVALU.scala 302:30]
    node _io_C_out_T_23 = xor(_io_C_out_T_22, terms_24) @[RISCVALU.scala 302:30]
    node _io_C_out_T_24 = xor(_io_C_out_T_23, terms_25) @[RISCVALU.scala 302:30]
    node _io_C_out_T_25 = xor(_io_C_out_T_24, terms_26) @[RISCVALU.scala 302:30]
    node _io_C_out_T_26 = xor(_io_C_out_T_25, terms_27) @[RISCVALU.scala 302:30]
    node _io_C_out_T_27 = xor(_io_C_out_T_26, terms_28) @[RISCVALU.scala 302:30]
    node _io_C_out_T_28 = xor(_io_C_out_T_27, terms_29) @[RISCVALU.scala 302:30]
    node _io_C_out_T_29 = xor(_io_C_out_T_28, terms_30) @[RISCVALU.scala 302:30]
    node _io_C_out_T_30 = xor(_io_C_out_T_29, terms_31) @[RISCVALU.scala 302:30]
    io.C_out <= _io_C_out_T_30 @[RISCVALU.scala 302:12]

  module Clmulh :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : UInt<32>, flip B_in : UInt<32>, C_out : UInt<32>}

    node terms_bit = bits(io.B_in, 1, 1) @[RISCVALU.scala 315:22]
    node terms_shifted = dshr(io.A_in, UInt<5>("h1f")) @[RISCVALU.scala 317:27]
    node terms_0 = mux(terms_bit, terms_shifted, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_1 = bits(io.B_in, 2, 2) @[RISCVALU.scala 315:22]
    node terms_shifted_1 = dshr(io.A_in, UInt<5>("h1e")) @[RISCVALU.scala 317:27]
    node terms_1 = mux(terms_bit_1, terms_shifted_1, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_2 = bits(io.B_in, 3, 3) @[RISCVALU.scala 315:22]
    node terms_shifted_2 = dshr(io.A_in, UInt<5>("h1d")) @[RISCVALU.scala 317:27]
    node terms_2 = mux(terms_bit_2, terms_shifted_2, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_3 = bits(io.B_in, 4, 4) @[RISCVALU.scala 315:22]
    node terms_shifted_3 = dshr(io.A_in, UInt<5>("h1c")) @[RISCVALU.scala 317:27]
    node terms_3 = mux(terms_bit_3, terms_shifted_3, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_4 = bits(io.B_in, 5, 5) @[RISCVALU.scala 315:22]
    node terms_shifted_4 = dshr(io.A_in, UInt<5>("h1b")) @[RISCVALU.scala 317:27]
    node terms_4 = mux(terms_bit_4, terms_shifted_4, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_5 = bits(io.B_in, 6, 6) @[RISCVALU.scala 315:22]
    node terms_shifted_5 = dshr(io.A_in, UInt<5>("h1a")) @[RISCVALU.scala 317:27]
    node terms_5 = mux(terms_bit_5, terms_shifted_5, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_6 = bits(io.B_in, 7, 7) @[RISCVALU.scala 315:22]
    node terms_shifted_6 = dshr(io.A_in, UInt<5>("h19")) @[RISCVALU.scala 317:27]
    node terms_6 = mux(terms_bit_6, terms_shifted_6, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_7 = bits(io.B_in, 8, 8) @[RISCVALU.scala 315:22]
    node terms_shifted_7 = dshr(io.A_in, UInt<5>("h18")) @[RISCVALU.scala 317:27]
    node terms_7 = mux(terms_bit_7, terms_shifted_7, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_8 = bits(io.B_in, 9, 9) @[RISCVALU.scala 315:22]
    node terms_shifted_8 = dshr(io.A_in, UInt<5>("h17")) @[RISCVALU.scala 317:27]
    node terms_8 = mux(terms_bit_8, terms_shifted_8, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_9 = bits(io.B_in, 10, 10) @[RISCVALU.scala 315:22]
    node terms_shifted_9 = dshr(io.A_in, UInt<5>("h16")) @[RISCVALU.scala 317:27]
    node terms_9 = mux(terms_bit_9, terms_shifted_9, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_10 = bits(io.B_in, 11, 11) @[RISCVALU.scala 315:22]
    node terms_shifted_10 = dshr(io.A_in, UInt<5>("h15")) @[RISCVALU.scala 317:27]
    node terms_10 = mux(terms_bit_10, terms_shifted_10, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_11 = bits(io.B_in, 12, 12) @[RISCVALU.scala 315:22]
    node terms_shifted_11 = dshr(io.A_in, UInt<5>("h14")) @[RISCVALU.scala 317:27]
    node terms_11 = mux(terms_bit_11, terms_shifted_11, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_12 = bits(io.B_in, 13, 13) @[RISCVALU.scala 315:22]
    node terms_shifted_12 = dshr(io.A_in, UInt<5>("h13")) @[RISCVALU.scala 317:27]
    node terms_12 = mux(terms_bit_12, terms_shifted_12, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_13 = bits(io.B_in, 14, 14) @[RISCVALU.scala 315:22]
    node terms_shifted_13 = dshr(io.A_in, UInt<5>("h12")) @[RISCVALU.scala 317:27]
    node terms_13 = mux(terms_bit_13, terms_shifted_13, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_14 = bits(io.B_in, 15, 15) @[RISCVALU.scala 315:22]
    node terms_shifted_14 = dshr(io.A_in, UInt<5>("h11")) @[RISCVALU.scala 317:27]
    node terms_14 = mux(terms_bit_14, terms_shifted_14, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_15 = bits(io.B_in, 16, 16) @[RISCVALU.scala 315:22]
    node terms_shifted_15 = dshr(io.A_in, UInt<5>("h10")) @[RISCVALU.scala 317:27]
    node terms_15 = mux(terms_bit_15, terms_shifted_15, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_16 = bits(io.B_in, 17, 17) @[RISCVALU.scala 315:22]
    node terms_shifted_16 = dshr(io.A_in, UInt<4>("hf")) @[RISCVALU.scala 317:27]
    node terms_16 = mux(terms_bit_16, terms_shifted_16, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_17 = bits(io.B_in, 18, 18) @[RISCVALU.scala 315:22]
    node terms_shifted_17 = dshr(io.A_in, UInt<4>("he")) @[RISCVALU.scala 317:27]
    node terms_17 = mux(terms_bit_17, terms_shifted_17, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_18 = bits(io.B_in, 19, 19) @[RISCVALU.scala 315:22]
    node terms_shifted_18 = dshr(io.A_in, UInt<4>("hd")) @[RISCVALU.scala 317:27]
    node terms_18 = mux(terms_bit_18, terms_shifted_18, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_19 = bits(io.B_in, 20, 20) @[RISCVALU.scala 315:22]
    node terms_shifted_19 = dshr(io.A_in, UInt<4>("hc")) @[RISCVALU.scala 317:27]
    node terms_19 = mux(terms_bit_19, terms_shifted_19, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_20 = bits(io.B_in, 21, 21) @[RISCVALU.scala 315:22]
    node terms_shifted_20 = dshr(io.A_in, UInt<4>("hb")) @[RISCVALU.scala 317:27]
    node terms_20 = mux(terms_bit_20, terms_shifted_20, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_21 = bits(io.B_in, 22, 22) @[RISCVALU.scala 315:22]
    node terms_shifted_21 = dshr(io.A_in, UInt<4>("ha")) @[RISCVALU.scala 317:27]
    node terms_21 = mux(terms_bit_21, terms_shifted_21, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_22 = bits(io.B_in, 23, 23) @[RISCVALU.scala 315:22]
    node terms_shifted_22 = dshr(io.A_in, UInt<4>("h9")) @[RISCVALU.scala 317:27]
    node terms_22 = mux(terms_bit_22, terms_shifted_22, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_23 = bits(io.B_in, 24, 24) @[RISCVALU.scala 315:22]
    node terms_shifted_23 = dshr(io.A_in, UInt<4>("h8")) @[RISCVALU.scala 317:27]
    node terms_23 = mux(terms_bit_23, terms_shifted_23, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_24 = bits(io.B_in, 25, 25) @[RISCVALU.scala 315:22]
    node terms_shifted_24 = dshr(io.A_in, UInt<3>("h7")) @[RISCVALU.scala 317:27]
    node terms_24 = mux(terms_bit_24, terms_shifted_24, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_25 = bits(io.B_in, 26, 26) @[RISCVALU.scala 315:22]
    node terms_shifted_25 = dshr(io.A_in, UInt<3>("h6")) @[RISCVALU.scala 317:27]
    node terms_25 = mux(terms_bit_25, terms_shifted_25, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_26 = bits(io.B_in, 27, 27) @[RISCVALU.scala 315:22]
    node terms_shifted_26 = dshr(io.A_in, UInt<3>("h5")) @[RISCVALU.scala 317:27]
    node terms_26 = mux(terms_bit_26, terms_shifted_26, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_27 = bits(io.B_in, 28, 28) @[RISCVALU.scala 315:22]
    node terms_shifted_27 = dshr(io.A_in, UInt<3>("h4")) @[RISCVALU.scala 317:27]
    node terms_27 = mux(terms_bit_27, terms_shifted_27, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_28 = bits(io.B_in, 29, 29) @[RISCVALU.scala 315:22]
    node terms_shifted_28 = dshr(io.A_in, UInt<2>("h3")) @[RISCVALU.scala 317:27]
    node terms_28 = mux(terms_bit_28, terms_shifted_28, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_29 = bits(io.B_in, 30, 30) @[RISCVALU.scala 315:22]
    node terms_shifted_29 = dshr(io.A_in, UInt<2>("h2")) @[RISCVALU.scala 317:27]
    node terms_29 = mux(terms_bit_29, terms_shifted_29, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node terms_bit_30 = bits(io.B_in, 31, 31) @[RISCVALU.scala 315:22]
    node terms_shifted_30 = dshr(io.A_in, UInt<1>("h1")) @[RISCVALU.scala 317:27]
    node terms_30 = mux(terms_bit_30, terms_shifted_30, UInt<1>("h0")) @[RISCVALU.scala 318:8]
    node _io_C_out_T = xor(terms_0, terms_1) @[RISCVALU.scala 322:30]
    node _io_C_out_T_1 = xor(_io_C_out_T, terms_2) @[RISCVALU.scala 322:30]
    node _io_C_out_T_2 = xor(_io_C_out_T_1, terms_3) @[RISCVALU.scala 322:30]
    node _io_C_out_T_3 = xor(_io_C_out_T_2, terms_4) @[RISCVALU.scala 322:30]
    node _io_C_out_T_4 = xor(_io_C_out_T_3, terms_5) @[RISCVALU.scala 322:30]
    node _io_C_out_T_5 = xor(_io_C_out_T_4, terms_6) @[RISCVALU.scala 322:30]
    node _io_C_out_T_6 = xor(_io_C_out_T_5, terms_7) @[RISCVALU.scala 322:30]
    node _io_C_out_T_7 = xor(_io_C_out_T_6, terms_8) @[RISCVALU.scala 322:30]
    node _io_C_out_T_8 = xor(_io_C_out_T_7, terms_9) @[RISCVALU.scala 322:30]
    node _io_C_out_T_9 = xor(_io_C_out_T_8, terms_10) @[RISCVALU.scala 322:30]
    node _io_C_out_T_10 = xor(_io_C_out_T_9, terms_11) @[RISCVALU.scala 322:30]
    node _io_C_out_T_11 = xor(_io_C_out_T_10, terms_12) @[RISCVALU.scala 322:30]
    node _io_C_out_T_12 = xor(_io_C_out_T_11, terms_13) @[RISCVALU.scala 322:30]
    node _io_C_out_T_13 = xor(_io_C_out_T_12, terms_14) @[RISCVALU.scala 322:30]
    node _io_C_out_T_14 = xor(_io_C_out_T_13, terms_15) @[RISCVALU.scala 322:30]
    node _io_C_out_T_15 = xor(_io_C_out_T_14, terms_16) @[RISCVALU.scala 322:30]
    node _io_C_out_T_16 = xor(_io_C_out_T_15, terms_17) @[RISCVALU.scala 322:30]
    node _io_C_out_T_17 = xor(_io_C_out_T_16, terms_18) @[RISCVALU.scala 322:30]
    node _io_C_out_T_18 = xor(_io_C_out_T_17, terms_19) @[RISCVALU.scala 322:30]
    node _io_C_out_T_19 = xor(_io_C_out_T_18, terms_20) @[RISCVALU.scala 322:30]
    node _io_C_out_T_20 = xor(_io_C_out_T_19, terms_21) @[RISCVALU.scala 322:30]
    node _io_C_out_T_21 = xor(_io_C_out_T_20, terms_22) @[RISCVALU.scala 322:30]
    node _io_C_out_T_22 = xor(_io_C_out_T_21, terms_23) @[RISCVALU.scala 322:30]
    node _io_C_out_T_23 = xor(_io_C_out_T_22, terms_24) @[RISCVALU.scala 322:30]
    node _io_C_out_T_24 = xor(_io_C_out_T_23, terms_25) @[RISCVALU.scala 322:30]
    node _io_C_out_T_25 = xor(_io_C_out_T_24, terms_26) @[RISCVALU.scala 322:30]
    node _io_C_out_T_26 = xor(_io_C_out_T_25, terms_27) @[RISCVALU.scala 322:30]
    node _io_C_out_T_27 = xor(_io_C_out_T_26, terms_28) @[RISCVALU.scala 322:30]
    node _io_C_out_T_28 = xor(_io_C_out_T_27, terms_29) @[RISCVALU.scala 322:30]
    node _io_C_out_T_29 = xor(_io_C_out_T_28, terms_30) @[RISCVALU.scala 322:30]
    io.C_out <= _io_C_out_T_29 @[RISCVALU.scala 322:12]

  module Clmulr :
    input clock : Clock
    input reset : Reset
    output io : { flip A_in : UInt<32>, flip B_in : UInt<32>, C_out : UInt<32>}

    node terms_shifted = dshr(io.A_in, UInt<5>("h1f")) @[RISCVALU.scala 337:27]
    node _terms_T = bits(io.B_in, 0, 0) @[RISCVALU.scala 338:16]
    node terms_0 = mux(_terms_T, terms_shifted, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_1 = dshr(io.A_in, UInt<5>("h1e")) @[RISCVALU.scala 337:27]
    node _terms_T_1 = bits(io.B_in, 1, 1) @[RISCVALU.scala 338:16]
    node terms_1 = mux(_terms_T_1, terms_shifted_1, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_2 = dshr(io.A_in, UInt<5>("h1d")) @[RISCVALU.scala 337:27]
    node _terms_T_2 = bits(io.B_in, 2, 2) @[RISCVALU.scala 338:16]
    node terms_2 = mux(_terms_T_2, terms_shifted_2, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_3 = dshr(io.A_in, UInt<5>("h1c")) @[RISCVALU.scala 337:27]
    node _terms_T_3 = bits(io.B_in, 3, 3) @[RISCVALU.scala 338:16]
    node terms_3 = mux(_terms_T_3, terms_shifted_3, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_4 = dshr(io.A_in, UInt<5>("h1b")) @[RISCVALU.scala 337:27]
    node _terms_T_4 = bits(io.B_in, 4, 4) @[RISCVALU.scala 338:16]
    node terms_4 = mux(_terms_T_4, terms_shifted_4, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_5 = dshr(io.A_in, UInt<5>("h1a")) @[RISCVALU.scala 337:27]
    node _terms_T_5 = bits(io.B_in, 5, 5) @[RISCVALU.scala 338:16]
    node terms_5 = mux(_terms_T_5, terms_shifted_5, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_6 = dshr(io.A_in, UInt<5>("h19")) @[RISCVALU.scala 337:27]
    node _terms_T_6 = bits(io.B_in, 6, 6) @[RISCVALU.scala 338:16]
    node terms_6 = mux(_terms_T_6, terms_shifted_6, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_7 = dshr(io.A_in, UInt<5>("h18")) @[RISCVALU.scala 337:27]
    node _terms_T_7 = bits(io.B_in, 7, 7) @[RISCVALU.scala 338:16]
    node terms_7 = mux(_terms_T_7, terms_shifted_7, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_8 = dshr(io.A_in, UInt<5>("h17")) @[RISCVALU.scala 337:27]
    node _terms_T_8 = bits(io.B_in, 8, 8) @[RISCVALU.scala 338:16]
    node terms_8 = mux(_terms_T_8, terms_shifted_8, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_9 = dshr(io.A_in, UInt<5>("h16")) @[RISCVALU.scala 337:27]
    node _terms_T_9 = bits(io.B_in, 9, 9) @[RISCVALU.scala 338:16]
    node terms_9 = mux(_terms_T_9, terms_shifted_9, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_10 = dshr(io.A_in, UInt<5>("h15")) @[RISCVALU.scala 337:27]
    node _terms_T_10 = bits(io.B_in, 10, 10) @[RISCVALU.scala 338:16]
    node terms_10 = mux(_terms_T_10, terms_shifted_10, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_11 = dshr(io.A_in, UInt<5>("h14")) @[RISCVALU.scala 337:27]
    node _terms_T_11 = bits(io.B_in, 11, 11) @[RISCVALU.scala 338:16]
    node terms_11 = mux(_terms_T_11, terms_shifted_11, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_12 = dshr(io.A_in, UInt<5>("h13")) @[RISCVALU.scala 337:27]
    node _terms_T_12 = bits(io.B_in, 12, 12) @[RISCVALU.scala 338:16]
    node terms_12 = mux(_terms_T_12, terms_shifted_12, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_13 = dshr(io.A_in, UInt<5>("h12")) @[RISCVALU.scala 337:27]
    node _terms_T_13 = bits(io.B_in, 13, 13) @[RISCVALU.scala 338:16]
    node terms_13 = mux(_terms_T_13, terms_shifted_13, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_14 = dshr(io.A_in, UInt<5>("h11")) @[RISCVALU.scala 337:27]
    node _terms_T_14 = bits(io.B_in, 14, 14) @[RISCVALU.scala 338:16]
    node terms_14 = mux(_terms_T_14, terms_shifted_14, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_15 = dshr(io.A_in, UInt<5>("h10")) @[RISCVALU.scala 337:27]
    node _terms_T_15 = bits(io.B_in, 15, 15) @[RISCVALU.scala 338:16]
    node terms_15 = mux(_terms_T_15, terms_shifted_15, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_16 = dshr(io.A_in, UInt<4>("hf")) @[RISCVALU.scala 337:27]
    node _terms_T_16 = bits(io.B_in, 16, 16) @[RISCVALU.scala 338:16]
    node terms_16 = mux(_terms_T_16, terms_shifted_16, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_17 = dshr(io.A_in, UInt<4>("he")) @[RISCVALU.scala 337:27]
    node _terms_T_17 = bits(io.B_in, 17, 17) @[RISCVALU.scala 338:16]
    node terms_17 = mux(_terms_T_17, terms_shifted_17, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_18 = dshr(io.A_in, UInt<4>("hd")) @[RISCVALU.scala 337:27]
    node _terms_T_18 = bits(io.B_in, 18, 18) @[RISCVALU.scala 338:16]
    node terms_18 = mux(_terms_T_18, terms_shifted_18, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_19 = dshr(io.A_in, UInt<4>("hc")) @[RISCVALU.scala 337:27]
    node _terms_T_19 = bits(io.B_in, 19, 19) @[RISCVALU.scala 338:16]
    node terms_19 = mux(_terms_T_19, terms_shifted_19, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_20 = dshr(io.A_in, UInt<4>("hb")) @[RISCVALU.scala 337:27]
    node _terms_T_20 = bits(io.B_in, 20, 20) @[RISCVALU.scala 338:16]
    node terms_20 = mux(_terms_T_20, terms_shifted_20, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_21 = dshr(io.A_in, UInt<4>("ha")) @[RISCVALU.scala 337:27]
    node _terms_T_21 = bits(io.B_in, 21, 21) @[RISCVALU.scala 338:16]
    node terms_21 = mux(_terms_T_21, terms_shifted_21, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_22 = dshr(io.A_in, UInt<4>("h9")) @[RISCVALU.scala 337:27]
    node _terms_T_22 = bits(io.B_in, 22, 22) @[RISCVALU.scala 338:16]
    node terms_22 = mux(_terms_T_22, terms_shifted_22, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_23 = dshr(io.A_in, UInt<4>("h8")) @[RISCVALU.scala 337:27]
    node _terms_T_23 = bits(io.B_in, 23, 23) @[RISCVALU.scala 338:16]
    node terms_23 = mux(_terms_T_23, terms_shifted_23, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_24 = dshr(io.A_in, UInt<3>("h7")) @[RISCVALU.scala 337:27]
    node _terms_T_24 = bits(io.B_in, 24, 24) @[RISCVALU.scala 338:16]
    node terms_24 = mux(_terms_T_24, terms_shifted_24, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_25 = dshr(io.A_in, UInt<3>("h6")) @[RISCVALU.scala 337:27]
    node _terms_T_25 = bits(io.B_in, 25, 25) @[RISCVALU.scala 338:16]
    node terms_25 = mux(_terms_T_25, terms_shifted_25, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_26 = dshr(io.A_in, UInt<3>("h5")) @[RISCVALU.scala 337:27]
    node _terms_T_26 = bits(io.B_in, 26, 26) @[RISCVALU.scala 338:16]
    node terms_26 = mux(_terms_T_26, terms_shifted_26, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_27 = dshr(io.A_in, UInt<3>("h4")) @[RISCVALU.scala 337:27]
    node _terms_T_27 = bits(io.B_in, 27, 27) @[RISCVALU.scala 338:16]
    node terms_27 = mux(_terms_T_27, terms_shifted_27, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_28 = dshr(io.A_in, UInt<2>("h3")) @[RISCVALU.scala 337:27]
    node _terms_T_28 = bits(io.B_in, 28, 28) @[RISCVALU.scala 338:16]
    node terms_28 = mux(_terms_T_28, terms_shifted_28, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_29 = dshr(io.A_in, UInt<2>("h2")) @[RISCVALU.scala 337:27]
    node _terms_T_29 = bits(io.B_in, 29, 29) @[RISCVALU.scala 338:16]
    node terms_29 = mux(_terms_T_29, terms_shifted_29, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_30 = dshr(io.A_in, UInt<1>("h1")) @[RISCVALU.scala 337:27]
    node _terms_T_30 = bits(io.B_in, 30, 30) @[RISCVALU.scala 338:16]
    node terms_30 = mux(_terms_T_30, terms_shifted_30, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node terms_shifted_31 = dshr(io.A_in, UInt<1>("h0")) @[RISCVALU.scala 337:27]
    node _terms_T_31 = bits(io.B_in, 31, 31) @[RISCVALU.scala 338:16]
    node terms_31 = mux(_terms_T_31, terms_shifted_31, UInt<1>("h0")) @[RISCVALU.scala 338:8]
    node _io_C_out_T = xor(terms_0, terms_1) @[RISCVALU.scala 342:30]
    node _io_C_out_T_1 = xor(_io_C_out_T, terms_2) @[RISCVALU.scala 342:30]
    node _io_C_out_T_2 = xor(_io_C_out_T_1, terms_3) @[RISCVALU.scala 342:30]
    node _io_C_out_T_3 = xor(_io_C_out_T_2, terms_4) @[RISCVALU.scala 342:30]
    node _io_C_out_T_4 = xor(_io_C_out_T_3, terms_5) @[RISCVALU.scala 342:30]
    node _io_C_out_T_5 = xor(_io_C_out_T_4, terms_6) @[RISCVALU.scala 342:30]
    node _io_C_out_T_6 = xor(_io_C_out_T_5, terms_7) @[RISCVALU.scala 342:30]
    node _io_C_out_T_7 = xor(_io_C_out_T_6, terms_8) @[RISCVALU.scala 342:30]
    node _io_C_out_T_8 = xor(_io_C_out_T_7, terms_9) @[RISCVALU.scala 342:30]
    node _io_C_out_T_9 = xor(_io_C_out_T_8, terms_10) @[RISCVALU.scala 342:30]
    node _io_C_out_T_10 = xor(_io_C_out_T_9, terms_11) @[RISCVALU.scala 342:30]
    node _io_C_out_T_11 = xor(_io_C_out_T_10, terms_12) @[RISCVALU.scala 342:30]
    node _io_C_out_T_12 = xor(_io_C_out_T_11, terms_13) @[RISCVALU.scala 342:30]
    node _io_C_out_T_13 = xor(_io_C_out_T_12, terms_14) @[RISCVALU.scala 342:30]
    node _io_C_out_T_14 = xor(_io_C_out_T_13, terms_15) @[RISCVALU.scala 342:30]
    node _io_C_out_T_15 = xor(_io_C_out_T_14, terms_16) @[RISCVALU.scala 342:30]
    node _io_C_out_T_16 = xor(_io_C_out_T_15, terms_17) @[RISCVALU.scala 342:30]
    node _io_C_out_T_17 = xor(_io_C_out_T_16, terms_18) @[RISCVALU.scala 342:30]
    node _io_C_out_T_18 = xor(_io_C_out_T_17, terms_19) @[RISCVALU.scala 342:30]
    node _io_C_out_T_19 = xor(_io_C_out_T_18, terms_20) @[RISCVALU.scala 342:30]
    node _io_C_out_T_20 = xor(_io_C_out_T_19, terms_21) @[RISCVALU.scala 342:30]
    node _io_C_out_T_21 = xor(_io_C_out_T_20, terms_22) @[RISCVALU.scala 342:30]
    node _io_C_out_T_22 = xor(_io_C_out_T_21, terms_23) @[RISCVALU.scala 342:30]
    node _io_C_out_T_23 = xor(_io_C_out_T_22, terms_24) @[RISCVALU.scala 342:30]
    node _io_C_out_T_24 = xor(_io_C_out_T_23, terms_25) @[RISCVALU.scala 342:30]
    node _io_C_out_T_25 = xor(_io_C_out_T_24, terms_26) @[RISCVALU.scala 342:30]
    node _io_C_out_T_26 = xor(_io_C_out_T_25, terms_27) @[RISCVALU.scala 342:30]
    node _io_C_out_T_27 = xor(_io_C_out_T_26, terms_28) @[RISCVALU.scala 342:30]
    node _io_C_out_T_28 = xor(_io_C_out_T_27, terms_29) @[RISCVALU.scala 342:30]
    node _io_C_out_T_29 = xor(_io_C_out_T_28, terms_30) @[RISCVALU.scala 342:30]
    node _io_C_out_T_30 = xor(_io_C_out_T_29, terms_31) @[RISCVALU.scala 342:30]
    io.C_out <= _io_C_out_T_30 @[RISCVALU.scala 342:12]

  module BExtALU :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip rs1 : UInt<32>, flip rs2 : UInt<32>, flip ALU_SEL : UInt<5>, flip EXT_SEL : UInt<2>, rd : UInt<32>}

    node signed_RS1 = asSInt(io.rs1) @[RISCVALU.scala 360:24]
    node signed_RS2 = asSInt(io.rs2) @[RISCVALU.scala 361:24]
    reg RD : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[RISCVALU.scala 363:19]
    inst ShiftL of ShiftLeft @[RISCVALU.scala 365:22]
    ShiftL.clock <= clock
    ShiftL.reset <= reset
    inst ShiftR of ShiftRight @[RISCVALU.scala 367:22]
    ShiftR.clock <= clock
    ShiftR.reset <= reset
    inst Add of Adder @[RISCVALU.scala 369:19]
    Add.clock <= clock
    Add.reset <= reset
    inst Invert of InvertBits @[RISCVALU.scala 371:22]
    Invert.clock <= clock
    Invert.reset <= reset
    inst AND of ANDBits @[RISCVALU.scala 373:19]
    AND.clock <= clock
    AND.reset <= reset
    inst OR of ORBits @[RISCVALU.scala 375:18]
    OR.clock <= clock
    OR.reset <= reset
    inst XOR of XORBits @[RISCVALU.scala 377:19]
    XOR.clock <= clock
    XOR.reset <= reset
    inst CLZ of CountLeadingZeros @[RISCVALU.scala 379:19]
    CLZ.clock <= clock
    CLZ.reset <= reset
    inst CTZ of CountTrailingZeros @[RISCVALU.scala 381:19]
    CTZ.clock <= clock
    CTZ.reset <= reset
    inst CPOP of CountPopulation @[RISCVALU.scala 383:20]
    CPOP.clock <= clock
    CPOP.reset <= reset
    inst MAX of MaxInstruction @[RISCVALU.scala 385:19]
    MAX.clock <= clock
    MAX.reset <= reset
    inst MAXU of MaxUInstruction @[RISCVALU.scala 387:20]
    MAXU.clock <= clock
    MAXU.reset <= reset
    inst MIN of MinInstruction @[RISCVALU.scala 389:19]
    MIN.clock <= clock
    MIN.reset <= reset
    inst MINU of MinUInstruction @[RISCVALU.scala 391:20]
    MINU.clock <= clock
    MINU.reset <= reset
    inst SEXTB of SextB @[RISCVALU.scala 393:21]
    SEXTB.clock <= clock
    SEXTB.reset <= reset
    inst SEXTH of SextH @[RISCVALU.scala 395:21]
    SEXTH.clock <= clock
    SEXTH.reset <= reset
    inst ZEXTH of ZextH @[RISCVALU.scala 397:21]
    ZEXTH.clock <= clock
    ZEXTH.reset <= reset
    inst ORCB of OrcB @[RISCVALU.scala 399:20]
    ORCB.clock <= clock
    ORCB.reset <= reset
    inst REV8 of Rev8 @[RISCVALU.scala 401:20]
    REV8.clock <= clock
    REV8.reset <= reset
    inst CLMUL of Clmul @[RISCVALU.scala 403:21]
    CLMUL.clock <= clock
    CLMUL.reset <= reset
    inst CLMULH of Clmulh @[RISCVALU.scala 405:22]
    CLMULH.clock <= clock
    CLMULH.reset <= reset
    inst CLMULR of Clmulr @[RISCVALU.scala 407:22]
    CLMULR.clock <= clock
    CLMULR.reset <= reset
    node shamt = bits(io.rs2, 4, 0) @[RISCVALU.scala 412:18]
    ShiftL.io.A_in <= UInt<1>("h0") @[RISCVALU.scala 416:18]
    ShiftL.io.bits <= UInt<1>("h0") @[RISCVALU.scala 417:18]
    ShiftR.io.A_in <= UInt<1>("h0") @[RISCVALU.scala 419:18]
    ShiftR.io.bits <= UInt<1>("h0") @[RISCVALU.scala 420:18]
    Add.io.A_in <= UInt<1>("h0") @[RISCVALU.scala 422:15]
    Add.io.B_in <= UInt<1>("h0") @[RISCVALU.scala 423:15]
    Invert.io.A_in <= UInt<1>("h0") @[RISCVALU.scala 425:18]
    AND.io.A_in <= UInt<1>("h0") @[RISCVALU.scala 427:15]
    AND.io.B_in <= UInt<1>("h0") @[RISCVALU.scala 428:15]
    OR.io.A_in <= UInt<1>("h0") @[RISCVALU.scala 430:14]
    OR.io.B_in <= UInt<1>("h0") @[RISCVALU.scala 431:14]
    XOR.io.A_in <= UInt<1>("h0") @[RISCVALU.scala 433:15]
    XOR.io.B_in <= UInt<1>("h0") @[RISCVALU.scala 434:15]
    CLZ.io.A_in <= UInt<1>("h0") @[RISCVALU.scala 436:15]
    CTZ.io.A_in <= UInt<1>("h0") @[RISCVALU.scala 438:15]
    CPOP.io.A_in <= UInt<1>("h0") @[RISCVALU.scala 440:16]
    MAX.io.A_in <= asSInt(UInt<1>("h0")) @[RISCVALU.scala 442:15]
    MAX.io.B_in <= asSInt(UInt<1>("h0")) @[RISCVALU.scala 443:15]
    MAXU.io.A_in <= UInt<1>("h0") @[RISCVALU.scala 445:16]
    MAXU.io.B_in <= UInt<1>("h0") @[RISCVALU.scala 446:16]
    MIN.io.A_in <= asSInt(UInt<1>("h0")) @[RISCVALU.scala 448:15]
    MIN.io.B_in <= asSInt(UInt<1>("h0")) @[RISCVALU.scala 449:15]
    MINU.io.A_in <= UInt<1>("h0") @[RISCVALU.scala 451:16]
    MINU.io.B_in <= UInt<1>("h0") @[RISCVALU.scala 452:16]
    SEXTB.io.A_in <= UInt<1>("h0") @[RISCVALU.scala 454:17]
    SEXTH.io.A_in <= UInt<1>("h0") @[RISCVALU.scala 456:17]
    ZEXTH.io.A_in <= UInt<1>("h0") @[RISCVALU.scala 458:17]
    ORCB.io.A_in <= UInt<1>("h0") @[RISCVALU.scala 460:16]
    REV8.io.A_in <= UInt<1>("h0") @[RISCVALU.scala 462:16]
    CLMUL.io.A_in <= UInt<1>("h0") @[RISCVALU.scala 464:17]
    CLMUL.io.B_in <= UInt<1>("h0") @[RISCVALU.scala 465:17]
    CLMULH.io.A_in <= UInt<1>("h0") @[RISCVALU.scala 467:18]
    CLMULH.io.B_in <= UInt<1>("h0") @[RISCVALU.scala 468:18]
    CLMULR.io.A_in <= UInt<1>("h0") @[RISCVALU.scala 470:18]
    CLMULR.io.B_in <= UInt<1>("h0") @[RISCVALU.scala 471:18]
    node _T = eq(io.EXT_SEL, UInt<1>("h0")) @[RISCVALU.scala 474:19]
    when _T : @[RISCVALU.scala 474:38]
      node _T_1 = asUInt(UInt<1>("h0")) @[RISCVALU.scala 476:24]
      node _T_2 = asUInt(io.ALU_SEL) @[RISCVALU.scala 476:24]
      node _T_3 = eq(_T_1, _T_2) @[RISCVALU.scala 476:24]
      when _T_3 : @[RISCVALU.scala 476:24]
        ShiftL.io.A_in <= io.rs1 @[RISCVALU.scala 480:24]
        ShiftL.io.bits <= UInt<1>("h1") @[RISCVALU.scala 481:24]
        Add.io.A_in <= ShiftL.io.A_out @[RISCVALU.scala 483:21]
        Add.io.B_in <= io.rs2 @[RISCVALU.scala 484:21]
        RD <= Add.io.sum @[RISCVALU.scala 485:12]
      else :
        node _T_4 = asUInt(UInt<1>("h1")) @[RISCVALU.scala 476:24]
        node _T_5 = asUInt(io.ALU_SEL) @[RISCVALU.scala 476:24]
        node _T_6 = eq(_T_4, _T_5) @[RISCVALU.scala 476:24]
        when _T_6 : @[RISCVALU.scala 476:24]
          ShiftL.io.A_in <= io.rs1 @[RISCVALU.scala 490:24]
          ShiftL.io.bits <= UInt<2>("h2") @[RISCVALU.scala 491:24]
          Add.io.A_in <= ShiftL.io.A_out @[RISCVALU.scala 493:21]
          Add.io.B_in <= io.rs2 @[RISCVALU.scala 494:21]
          RD <= Add.io.sum @[RISCVALU.scala 495:12]
        else :
          node _T_7 = asUInt(UInt<2>("h2")) @[RISCVALU.scala 476:24]
          node _T_8 = asUInt(io.ALU_SEL) @[RISCVALU.scala 476:24]
          node _T_9 = eq(_T_7, _T_8) @[RISCVALU.scala 476:24]
          when _T_9 : @[RISCVALU.scala 476:24]
            ShiftL.io.A_in <= io.rs1 @[RISCVALU.scala 500:24]
            ShiftL.io.bits <= UInt<2>("h3") @[RISCVALU.scala 501:24]
            Add.io.A_in <= ShiftL.io.A_out @[RISCVALU.scala 503:21]
            Add.io.B_in <= io.rs2 @[RISCVALU.scala 504:21]
            RD <= Add.io.sum @[RISCVALU.scala 505:12]
    else :
      node _T_10 = eq(io.EXT_SEL, UInt<1>("h1")) @[RISCVALU.scala 510:23]
      when _T_10 : @[RISCVALU.scala 510:42]
        node _T_11 = asUInt(UInt<2>("h3")) @[RISCVALU.scala 512:23]
        node _T_12 = asUInt(io.ALU_SEL) @[RISCVALU.scala 512:23]
        node _T_13 = eq(_T_11, _T_12) @[RISCVALU.scala 512:23]
        when _T_13 : @[RISCVALU.scala 512:23]
          Invert.io.A_in <= io.rs2 @[RISCVALU.scala 518:23]
          AND.io.A_in <= io.rs1 @[RISCVALU.scala 520:20]
          AND.io.B_in <= Invert.io.A_out @[RISCVALU.scala 521:20]
          RD <= AND.io.and @[RISCVALU.scala 522:11]
        else :
          node _T_14 = asUInt(UInt<3>("h4")) @[RISCVALU.scala 512:23]
          node _T_15 = asUInt(io.ALU_SEL) @[RISCVALU.scala 512:23]
          node _T_16 = eq(_T_14, _T_15) @[RISCVALU.scala 512:23]
          when _T_16 : @[RISCVALU.scala 512:23]
            Invert.io.A_in <= io.rs2 @[RISCVALU.scala 527:23]
            OR.io.A_in <= io.rs1 @[RISCVALU.scala 529:19]
            OR.io.B_in <= Invert.io.A_out @[RISCVALU.scala 530:19]
            RD <= OR.io.or @[RISCVALU.scala 531:11]
          else :
            node _T_17 = asUInt(UInt<3>("h5")) @[RISCVALU.scala 512:23]
            node _T_18 = asUInt(io.ALU_SEL) @[RISCVALU.scala 512:23]
            node _T_19 = eq(_T_17, _T_18) @[RISCVALU.scala 512:23]
            when _T_19 : @[RISCVALU.scala 512:23]
              XOR.io.A_in <= io.rs1 @[RISCVALU.scala 537:20]
              XOR.io.B_in <= io.rs2 @[RISCVALU.scala 538:20]
              Invert.io.A_in <= XOR.io.xor @[RISCVALU.scala 540:23]
              RD <= Invert.io.A_out @[RISCVALU.scala 541:11]
            else :
              node _T_20 = asUInt(UInt<3>("h6")) @[RISCVALU.scala 512:23]
              node _T_21 = asUInt(io.ALU_SEL) @[RISCVALU.scala 512:23]
              node _T_22 = eq(_T_20, _T_21) @[RISCVALU.scala 512:23]
              when _T_22 : @[RISCVALU.scala 512:23]
                CLZ.io.A_in <= io.rs1 @[RISCVALU.scala 546:21]
                RD <= CLZ.io.A_out @[RISCVALU.scala 547:12]
              else :
                node _T_23 = asUInt(UInt<3>("h7")) @[RISCVALU.scala 512:23]
                node _T_24 = asUInt(io.ALU_SEL) @[RISCVALU.scala 512:23]
                node _T_25 = eq(_T_23, _T_24) @[RISCVALU.scala 512:23]
                when _T_25 : @[RISCVALU.scala 512:23]
                  CTZ.io.A_in <= io.rs1 @[RISCVALU.scala 552:21]
                  RD <= CTZ.io.A_out @[RISCVALU.scala 553:12]
                else :
                  node _T_26 = asUInt(UInt<4>("h8")) @[RISCVALU.scala 512:23]
                  node _T_27 = asUInt(io.ALU_SEL) @[RISCVALU.scala 512:23]
                  node _T_28 = eq(_T_26, _T_27) @[RISCVALU.scala 512:23]
                  when _T_28 : @[RISCVALU.scala 512:23]
                    CPOP.io.A_in <= io.rs1 @[RISCVALU.scala 558:22]
                    RD <= CPOP.io.A_out @[RISCVALU.scala 559:12]
                  else :
                    node _T_29 = asUInt(UInt<4>("h9")) @[RISCVALU.scala 512:23]
                    node _T_30 = asUInt(io.ALU_SEL) @[RISCVALU.scala 512:23]
                    node _T_31 = eq(_T_29, _T_30) @[RISCVALU.scala 512:23]
                    when _T_31 : @[RISCVALU.scala 512:23]
                      MAX.io.A_in <= signed_RS1 @[RISCVALU.scala 565:20]
                      MAX.io.B_in <= signed_RS2 @[RISCVALU.scala 566:20]
                      RD <= MAX.io.max @[RISCVALU.scala 568:11]
                    else :
                      node _T_32 = asUInt(UInt<4>("ha")) @[RISCVALU.scala 512:23]
                      node _T_33 = asUInt(io.ALU_SEL) @[RISCVALU.scala 512:23]
                      node _T_34 = eq(_T_32, _T_33) @[RISCVALU.scala 512:23]
                      when _T_34 : @[RISCVALU.scala 512:23]
                        MAXU.io.A_in <= io.rs1 @[RISCVALU.scala 574:21]
                        MAXU.io.B_in <= io.rs2 @[RISCVALU.scala 575:21]
                        RD <= MAXU.io.maxu @[RISCVALU.scala 577:11]
                      else :
                        node _T_35 = asUInt(UInt<4>("hb")) @[RISCVALU.scala 512:23]
                        node _T_36 = asUInt(io.ALU_SEL) @[RISCVALU.scala 512:23]
                        node _T_37 = eq(_T_35, _T_36) @[RISCVALU.scala 512:23]
                        when _T_37 : @[RISCVALU.scala 512:23]
                          MIN.io.A_in <= signed_RS1 @[RISCVALU.scala 583:20]
                          MIN.io.B_in <= signed_RS2 @[RISCVALU.scala 584:20]
                          RD <= MIN.io.min @[RISCVALU.scala 586:11]
                        else :
                          node _T_38 = asUInt(UInt<4>("hc")) @[RISCVALU.scala 512:23]
                          node _T_39 = asUInt(io.ALU_SEL) @[RISCVALU.scala 512:23]
                          node _T_40 = eq(_T_38, _T_39) @[RISCVALU.scala 512:23]
                          when _T_40 : @[RISCVALU.scala 512:23]
                            MINU.io.A_in <= io.rs1 @[RISCVALU.scala 592:21]
                            MINU.io.B_in <= io.rs2 @[RISCVALU.scala 593:21]
                            RD <= MINU.io.minu @[RISCVALU.scala 595:11]
                          else :
                            node _T_41 = asUInt(UInt<4>("hd")) @[RISCVALU.scala 512:23]
                            node _T_42 = asUInt(io.ALU_SEL) @[RISCVALU.scala 512:23]
                            node _T_43 = eq(_T_41, _T_42) @[RISCVALU.scala 512:23]
                            when _T_43 : @[RISCVALU.scala 512:23]
                              SEXTB.io.A_in <= io.rs1 @[RISCVALU.scala 600:23]
                              RD <= SEXTB.io.A_out @[RISCVALU.scala 601:12]
                            else :
                              node _T_44 = asUInt(UInt<4>("he")) @[RISCVALU.scala 512:23]
                              node _T_45 = asUInt(io.ALU_SEL) @[RISCVALU.scala 512:23]
                              node _T_46 = eq(_T_44, _T_45) @[RISCVALU.scala 512:23]
                              when _T_46 : @[RISCVALU.scala 512:23]
                                SEXTH.io.A_in <= io.rs1 @[RISCVALU.scala 606:23]
                                RD <= SEXTH.io.A_out @[RISCVALU.scala 607:12]
                              else :
                                node _T_47 = asUInt(UInt<4>("hf")) @[RISCVALU.scala 512:23]
                                node _T_48 = asUInt(io.ALU_SEL) @[RISCVALU.scala 512:23]
                                node _T_49 = eq(_T_47, _T_48) @[RISCVALU.scala 512:23]
                                when _T_49 : @[RISCVALU.scala 512:23]
                                  ZEXTH.io.A_in <= io.rs1 @[RISCVALU.scala 612:23]
                                  RD <= ZEXTH.io.A_out @[RISCVALU.scala 613:12]
                                else :
                                  node _T_50 = asUInt(UInt<5>("h10")) @[RISCVALU.scala 512:23]
                                  node _T_51 = asUInt(io.ALU_SEL) @[RISCVALU.scala 512:23]
                                  node _T_52 = eq(_T_50, _T_51) @[RISCVALU.scala 512:23]
                                  when _T_52 : @[RISCVALU.scala 512:23]
                                    node shamt_1 = bits(io.rs2, 4, 0) @[RISCVALU.scala 620:24]
                                    node _rightShiftBits_T = sub(UInt<6>("h20"), shamt_1) @[RISCVALU.scala 623:35]
                                    node rightShiftBits = tail(_rightShiftBits_T, 1) @[RISCVALU.scala 623:35]
                                    ShiftL.io.A_in <= io.rs1 @[RISCVALU.scala 625:24]
                                    ShiftL.io.bits <= shamt_1 @[RISCVALU.scala 626:24]
                                    ShiftR.io.A_in <= io.rs1 @[RISCVALU.scala 628:24]
                                    ShiftR.io.bits <= rightShiftBits @[RISCVALU.scala 629:24]
                                    OR.io.A_in <= ShiftL.io.A_out @[RISCVALU.scala 631:20]
                                    OR.io.B_in <= ShiftR.io.A_out @[RISCVALU.scala 632:20]
                                    RD <= OR.io.or @[RISCVALU.scala 634:12]
                                  else :
                                    node _T_53 = asUInt(UInt<5>("h11")) @[RISCVALU.scala 512:23]
                                    node _T_54 = asUInt(io.ALU_SEL) @[RISCVALU.scala 512:23]
                                    node _T_55 = eq(_T_53, _T_54) @[RISCVALU.scala 512:23]
                                    when _T_55 : @[RISCVALU.scala 512:23]
                                      node shamt_2 = bits(io.rs2, 4, 0) @[RISCVALU.scala 641:24]
                                      node _leftShiftBits_T = sub(UInt<6>("h20"), shamt_2) @[RISCVALU.scala 643:34]
                                      node leftShiftBits = tail(_leftShiftBits_T, 1) @[RISCVALU.scala 643:34]
                                      ShiftL.io.A_in <= io.rs1 @[RISCVALU.scala 646:24]
                                      ShiftL.io.bits <= leftShiftBits @[RISCVALU.scala 647:24]
                                      ShiftR.io.A_in <= io.rs1 @[RISCVALU.scala 649:24]
                                      ShiftR.io.bits <= shamt_2 @[RISCVALU.scala 650:24]
                                      OR.io.A_in <= ShiftR.io.A_out @[RISCVALU.scala 652:20]
                                      OR.io.B_in <= ShiftL.io.A_out @[RISCVALU.scala 653:20]
                                      RD <= OR.io.or @[RISCVALU.scala 655:12]
                                    else :
                                      node _T_56 = asUInt(UInt<5>("h12")) @[RISCVALU.scala 512:23]
                                      node _T_57 = asUInt(io.ALU_SEL) @[RISCVALU.scala 512:23]
                                      node _T_58 = eq(_T_56, _T_57) @[RISCVALU.scala 512:23]
                                      when _T_58 : @[RISCVALU.scala 512:23]
                                        node shamt_3 = bits(io.rs2, 4, 0) @[RISCVALU.scala 662:24]
                                        node _realShamt_T = bits(shamt_3, 4, 4) @[RISCVALU.scala 665:34]
                                        node _realShamt_T_1 = eq(_realShamt_T, UInt<1>("h1")) @[RISCVALU.scala 665:38]
                                        node _realShamt_T_2 = bits(shamt_3, 3, 0) @[RISCVALU.scala 665:52]
                                        node realShamt = mux(_realShamt_T_1, _realShamt_T_2, shamt_3) @[RISCVALU.scala 665:28]
                                        node _leftShiftBits_T_1 = sub(UInt<6>("h20"), realShamt) @[RISCVALU.scala 667:34]
                                        node leftShiftBits_1 = tail(_leftShiftBits_T_1, 1) @[RISCVALU.scala 667:34]
                                        ShiftL.io.A_in <= io.rs1 @[RISCVALU.scala 670:24]
                                        ShiftL.io.bits <= leftShiftBits_1 @[RISCVALU.scala 671:24]
                                        ShiftR.io.A_in <= io.rs1 @[RISCVALU.scala 673:24]
                                        ShiftR.io.bits <= realShamt @[RISCVALU.scala 674:24]
                                        OR.io.A_in <= ShiftR.io.A_out @[RISCVALU.scala 676:20]
                                        OR.io.B_in <= ShiftL.io.A_out @[RISCVALU.scala 677:20]
                                        RD <= OR.io.or @[RISCVALU.scala 679:12]
                                      else :
                                        node _T_59 = asUInt(UInt<5>("h13")) @[RISCVALU.scala 512:23]
                                        node _T_60 = asUInt(io.ALU_SEL) @[RISCVALU.scala 512:23]
                                        node _T_61 = eq(_T_59, _T_60) @[RISCVALU.scala 512:23]
                                        when _T_61 : @[RISCVALU.scala 512:23]
                                          ORCB.io.A_in <= io.rs1 @[RISCVALU.scala 684:22]
                                          RD <= ORCB.io.A_out @[RISCVALU.scala 685:12]
                                        else :
                                          node _T_62 = asUInt(UInt<5>("h14")) @[RISCVALU.scala 512:23]
                                          node _T_63 = asUInt(io.ALU_SEL) @[RISCVALU.scala 512:23]
                                          node _T_64 = eq(_T_62, _T_63) @[RISCVALU.scala 512:23]
                                          when _T_64 : @[RISCVALU.scala 512:23]
                                            REV8.io.A_in <= io.rs1 @[RISCVALU.scala 690:22]
                                            RD <= REV8.io.A_out @[RISCVALU.scala 691:12]
      else :
        node _T_65 = eq(io.EXT_SEL, UInt<2>("h2")) @[RISCVALU.scala 697:25]
        when _T_65 : @[RISCVALU.scala 697:44]
          node _T_66 = asUInt(UInt<5>("h15")) @[RISCVALU.scala 699:26]
          node _T_67 = asUInt(io.ALU_SEL) @[RISCVALU.scala 699:26]
          node _T_68 = eq(_T_66, _T_67) @[RISCVALU.scala 699:26]
          when _T_68 : @[RISCVALU.scala 699:26]
            CLMUL.io.A_in <= io.rs1 @[RISCVALU.scala 703:20]
            CLMUL.io.B_in <= io.rs2 @[RISCVALU.scala 704:20]
            RD <= CLMUL.io.C_out @[RISCVALU.scala 705:9]
          else :
            node _T_69 = asUInt(UInt<5>("h16")) @[RISCVALU.scala 699:26]
            node _T_70 = asUInt(io.ALU_SEL) @[RISCVALU.scala 699:26]
            node _T_71 = eq(_T_69, _T_70) @[RISCVALU.scala 699:26]
            when _T_71 : @[RISCVALU.scala 699:26]
              CLMULH.io.A_in <= io.rs1 @[RISCVALU.scala 710:21]
              CLMULH.io.B_in <= io.rs2 @[RISCVALU.scala 711:21]
              RD <= CLMULH.io.C_out @[RISCVALU.scala 712:9]
            else :
              node _T_72 = asUInt(UInt<5>("h17")) @[RISCVALU.scala 699:26]
              node _T_73 = asUInt(io.ALU_SEL) @[RISCVALU.scala 699:26]
              node _T_74 = eq(_T_72, _T_73) @[RISCVALU.scala 699:26]
              when _T_74 : @[RISCVALU.scala 699:26]
                CLMULR.io.A_in <= io.rs1 @[RISCVALU.scala 717:21]
                CLMULR.io.B_in <= io.rs2 @[RISCVALU.scala 718:21]
                RD <= CLMULR.io.C_out @[RISCVALU.scala 719:9]
        else :
          node _T_75 = eq(io.EXT_SEL, UInt<2>("h3")) @[RISCVALU.scala 725:28]
          when _T_75 : @[RISCVALU.scala 725:47]
            node _T_76 = asUInt(UInt<5>("h18")) @[RISCVALU.scala 727:27]
            node _T_77 = asUInt(io.ALU_SEL) @[RISCVALU.scala 727:27]
            node _T_78 = eq(_T_76, _T_77) @[RISCVALU.scala 727:27]
            when _T_78 : @[RISCVALU.scala 727:27]
              ShiftL.io.A_in <= UInt<1>("h1") @[RISCVALU.scala 737:24]
              ShiftL.io.bits <= shamt @[RISCVALU.scala 738:24]
              Invert.io.A_in <= ShiftL.io.A_out @[RISCVALU.scala 740:24]
              AND.io.A_in <= io.rs1 @[RISCVALU.scala 742:21]
              AND.io.B_in <= Invert.io.A_out @[RISCVALU.scala 743:21]
              RD <= AND.io.and @[RISCVALU.scala 745:12]
            else :
              node _T_79 = asUInt(UInt<5>("h19")) @[RISCVALU.scala 727:27]
              node _T_80 = asUInt(io.ALU_SEL) @[RISCVALU.scala 727:27]
              node _T_81 = eq(_T_79, _T_80) @[RISCVALU.scala 727:27]
              when _T_81 : @[RISCVALU.scala 727:27]
                node _realShamt_T_3 = bits(shamt, 4, 4) @[RISCVALU.scala 753:34]
                node _realShamt_T_4 = eq(_realShamt_T_3, UInt<1>("h1")) @[RISCVALU.scala 753:38]
                node _realShamt_T_5 = bits(shamt, 3, 0) @[RISCVALU.scala 753:52]
                node realShamt_1 = mux(_realShamt_T_4, _realShamt_T_5, shamt) @[RISCVALU.scala 753:28]
                ShiftL.io.A_in <= UInt<1>("h1") @[RISCVALU.scala 755:26]
                ShiftL.io.bits <= realShamt_1 @[RISCVALU.scala 756:26]
                Invert.io.A_in <= ShiftL.io.A_out @[RISCVALU.scala 758:26]
                AND.io.A_in <= io.rs1 @[RISCVALU.scala 760:23]
                AND.io.B_in <= Invert.io.A_out @[RISCVALU.scala 761:23]
                RD <= AND.io.and @[RISCVALU.scala 762:14]
              else :
                node _T_82 = asUInt(UInt<5>("h1a")) @[RISCVALU.scala 727:27]
                node _T_83 = asUInt(io.ALU_SEL) @[RISCVALU.scala 727:27]
                node _T_84 = eq(_T_82, _T_83) @[RISCVALU.scala 727:27]
                when _T_84 : @[RISCVALU.scala 727:27]
                  ShiftR.io.A_in <= io.rs1 @[RISCVALU.scala 769:24]
                  ShiftR.io.bits <= shamt @[RISCVALU.scala 770:24]
                  AND.io.A_in <= ShiftR.io.A_out @[RISCVALU.scala 772:21]
                  AND.io.B_in <= UInt<1>("h1") @[RISCVALU.scala 773:21]
                  RD <= AND.io.and @[RISCVALU.scala 775:12]
                else :
                  node _T_85 = asUInt(UInt<5>("h1b")) @[RISCVALU.scala 727:27]
                  node _T_86 = asUInt(io.ALU_SEL) @[RISCVALU.scala 727:27]
                  node _T_87 = eq(_T_85, _T_86) @[RISCVALU.scala 727:27]
                  when _T_87 : @[RISCVALU.scala 727:27]
                    node _realShamt_T_6 = bits(shamt, 4, 4) @[RISCVALU.scala 783:34]
                    node _realShamt_T_7 = eq(_realShamt_T_6, UInt<1>("h1")) @[RISCVALU.scala 783:38]
                    node _realShamt_T_8 = bits(shamt, 3, 0) @[RISCVALU.scala 783:52]
                    node realShamt_2 = mux(_realShamt_T_7, _realShamt_T_8, shamt) @[RISCVALU.scala 783:28]
                    ShiftR.io.A_in <= io.rs1 @[RISCVALU.scala 785:26]
                    ShiftR.io.bits <= realShamt_2 @[RISCVALU.scala 786:26]
                    AND.io.A_in <= ShiftR.io.A_out @[RISCVALU.scala 788:23]
                    AND.io.B_in <= UInt<1>("h1") @[RISCVALU.scala 789:23]
                    RD <= AND.io.and @[RISCVALU.scala 790:14]
                  else :
                    node _T_88 = asUInt(UInt<5>("h1c")) @[RISCVALU.scala 727:27]
                    node _T_89 = asUInt(io.ALU_SEL) @[RISCVALU.scala 727:27]
                    node _T_90 = eq(_T_88, _T_89) @[RISCVALU.scala 727:27]
                    when _T_90 : @[RISCVALU.scala 727:27]
                      ShiftL.io.A_in <= UInt<1>("h1") @[RISCVALU.scala 797:24]
                      ShiftL.io.bits <= shamt @[RISCVALU.scala 798:24]
                      XOR.io.A_in <= io.rs1 @[RISCVALU.scala 800:21]
                      XOR.io.B_in <= ShiftL.io.A_out @[RISCVALU.scala 801:21]
                      RD <= XOR.io.xor @[RISCVALU.scala 803:12]
                    else :
                      node _T_91 = asUInt(UInt<5>("h1d")) @[RISCVALU.scala 727:27]
                      node _T_92 = asUInt(io.ALU_SEL) @[RISCVALU.scala 727:27]
                      node _T_93 = eq(_T_91, _T_92) @[RISCVALU.scala 727:27]
                      when _T_93 : @[RISCVALU.scala 727:27]
                        node _realShamt_T_9 = bits(shamt, 4, 4) @[RISCVALU.scala 811:34]
                        node _realShamt_T_10 = eq(_realShamt_T_9, UInt<1>("h1")) @[RISCVALU.scala 811:38]
                        node _realShamt_T_11 = bits(shamt, 3, 0) @[RISCVALU.scala 811:52]
                        node realShamt_3 = mux(_realShamt_T_10, _realShamt_T_11, shamt) @[RISCVALU.scala 811:28]
                        ShiftL.io.A_in <= UInt<1>("h1") @[RISCVALU.scala 813:27]
                        ShiftL.io.bits <= realShamt_3 @[RISCVALU.scala 814:27]
                        XOR.io.A_in <= io.rs1 @[RISCVALU.scala 816:24]
                        XOR.io.B_in <= ShiftL.io.A_out @[RISCVALU.scala 817:24]
                        RD <= XOR.io.xor @[RISCVALU.scala 819:15]
                      else :
                        node _T_94 = asUInt(UInt<5>("h1e")) @[RISCVALU.scala 727:27]
                        node _T_95 = asUInt(io.ALU_SEL) @[RISCVALU.scala 727:27]
                        node _T_96 = eq(_T_94, _T_95) @[RISCVALU.scala 727:27]
                        when _T_96 : @[RISCVALU.scala 727:27]
                          ShiftL.io.A_in <= UInt<1>("h1") @[RISCVALU.scala 826:24]
                          ShiftL.io.bits <= shamt @[RISCVALU.scala 827:24]
                          OR.io.A_in <= io.rs1 @[RISCVALU.scala 829:20]
                          OR.io.B_in <= ShiftL.io.A_out @[RISCVALU.scala 830:20]
                          RD <= OR.io.or @[RISCVALU.scala 832:12]
                        else :
                          node _T_97 = asUInt(UInt<5>("h1f")) @[RISCVALU.scala 727:27]
                          node _T_98 = asUInt(io.ALU_SEL) @[RISCVALU.scala 727:27]
                          node _T_99 = eq(_T_97, _T_98) @[RISCVALU.scala 727:27]
                          when _T_99 : @[RISCVALU.scala 727:27]
                            node _realShamt_T_12 = bits(shamt, 4, 4) @[RISCVALU.scala 840:34]
                            node _realShamt_T_13 = eq(_realShamt_T_12, UInt<1>("h1")) @[RISCVALU.scala 840:38]
                            node _realShamt_T_14 = bits(shamt, 3, 0) @[RISCVALU.scala 840:52]
                            node realShamt_4 = mux(_realShamt_T_13, _realShamt_T_14, shamt) @[RISCVALU.scala 840:28]
                            ShiftL.io.A_in <= UInt<1>("h1") @[RISCVALU.scala 842:27]
                            ShiftL.io.bits <= realShamt_4 @[RISCVALU.scala 843:27]
                            OR.io.A_in <= io.rs1 @[RISCVALU.scala 845:23]
                            OR.io.B_in <= ShiftL.io.A_out @[RISCVALU.scala 846:23]
                            RD <= OR.io.or @[RISCVALU.scala 848:15]
    io.rd <= RD @[RISCVALU.scala 856:9]

